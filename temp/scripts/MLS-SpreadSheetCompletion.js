/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/content/SpreadSheetCompletion.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/assets/scripts/components/sumBoxButtons.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _modules_AddressInfoExport__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./app/assets/scripts/modules/AddressInfoExport.js\");\n\n\n\n\n\n\n\n\nvar $fx = L$();\n\nvar SumBoxButtons =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(SumBoxButtons, _React$Component);\n\n  function SumBoxButtons(props) {\n    var _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SumBoxButtons);\n\n    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(SumBoxButtons).call(this, props));\n    _this.state = {\n      liked: false,\n      language: $(\"div#reportlanguage input\", top.document),\n      complexName: $(\"div#app_banner_links_left input.select2-search__field\", top.document)\n    };\n    return _this;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(SumBoxButtons, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.language.is(\":checked\")) {\n        console.info(\"Hello React Chinese\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"flex-container\"\n      }, React.createElement(\"div\", null, React.createElement(\"div\", null, React.createElement(\"button\", {\n        title: \"Send CMA Listings\",\n        onClick: this.onExp.bind(this)\n      }, \"Exp\", \" \"), \" \"), \" \", React.createElement(\"div\", null, React.createElement(\"button\", {\n        title: \"Resume Tax Searches\",\n        onClick: function onClick() {\n          return _this2.onTaxSearch();\n        }\n      }, \"Bca\", \" \"), \" \"), \" \", React.createElement(\"div\", null, React.createElement(\"button\", {\n        title: \"Save Complex Name\",\n        onClick: function onClick() {\n          return _this2.onSaveComplexInfo();\n        }\n      }, \"Cpx\", \" \"), \" \"), \" \"), \" \", React.createElement(\"div\", null, React.createElement(\"div\", null, React.createElement(\"button\", {\n        title: \"Save CMA Subject Info\",\n        onClick: function onClick() {\n          return _this2.onSaveSubjectInfo();\n        }\n      }, \"Sub\", \" \"), \" \"), \" \", React.createElement(\"div\", null, React.createElement(\"button\", {\n        title: \"Send Listings Table to Map Search\",\n        id: \"mls-send-table-to-background\",\n        onClick: function onClick() {\n          return _this2.onSendTableInfoToBackground();\n        }\n      }, \"Tbl\", \" \"), \" \"), \" \", React.createElement(\"div\", null, React.createElement(\"button\", {\n        title: \"Update RPS Listings Info(neighborhood)\",\n        id: \"mls-get-data\",\n        onClick: function onClick() {\n          return _this2.onGetData();\n        }\n      }, \"RPS\", \" \"), \" \"), \" \"), \" \");\n    }\n  }, {\n    key: \"onGetData\",\n    value: function onGetData() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      console.log(\"get data\"); //{\"viewID\":1,\"searchID\":\"tab4_1_2\",\"paging\":{\"_search\":false,\"nd\":1602269249984,\"rows\":250,\"page\":1,\"sidx\":\"0_13_\",\"sord\":\"asc\",\"sidx2\":null,\"sord2\":null,\"sidx3\":null,\"sord3\":null}}\n      // https://bcres.paragonrels.com/ParagonLS/Services/Listing.svc/json/v1/GetData\n\n      var ajax_url = \"https://bcres.paragonrels.com/ParagonLS/Services/Listing.svc/json/v1/GetData\";\n      var tabID = $fx.getSearchTabID(); // remove '#' from tabID\n\n      tabID = tabID.replace(\"#\", \"\");\n      var htmlTotalPages = $(\"#sp_1\", parent.document);\n      var totalPages = parseInt(htmlTotalPages.text());\n      var currentPage = page;\n      var listingData = {\n        viewID: 1,\n        searchID: tabID,\n        //\"tab4_1_2\",\n        paging: {\n          _search: false,\n          nd: 1602269249984,\n          rows: 250,\n          page: currentPage,\n          sidx: \"0_13_\",\n          sord: \"asc\",\n          sidx2: null,\n          sord2: null,\n          sidx3: null,\n          sord3: null\n        }\n      }; //do ajax call\n\n      var ajax_call = $.ajax.bind(this);\n      ajax_call({\n        url: ajax_url,\n        type: \"POST\",\n        contentType: \"application/json\",\n        data: JSON.stringify(listingData),\n        dataType: \"json\",\n        success: function (res) {\n          var _this3 = this;\n\n          //console.log(\"res::\", JSON.stringify(res));\n          var urlLocationOptionLocal = $(\"#pid_local\", top.document);\n          var urlLocationOptionSynology = $(\"#pid_synology\", top.document);\n          var urlLocation = urlLocationOptionLocal.prop(\"checked\") || urlLocationOptionSynology;\n          var ajax_url = \"\";\n\n          if (urlLocation) {\n            if (urlLocationOptionLocal) {\n              ajax_url = \"https://pidrealty4.local/wp-content/themes/Realhomes-child-3/db/updateRPSCommunity.php\";\n            } else {\n              ajax_url = \"https://pidrealty.ca/wp-content/themes/Realhomes-child-3/db/updateRPSCommunity.php\";\n            }\n          } else {\n            ajax_url = \"https://cn.pidhomes.ca/wp-content/themes/realhomes-child-3/db/updateRPSCommunity.php\";\n          }\n\n          ajax_url = $fx.getPIDAjaxUrl() + \"updateRPSCommunity.php\";\n          var _listings = res.rows;\n          var listings = [];\n          var _listing = {};\n\n          for (var i = 0; i < _listings.length; i++) {\n            _listing = {\n              mlsNo: _listings[i][\"cell\"][1],\n              neighborhood: _listings[i][\"cell\"][8],\n              communityName: _listings[i][\"cell\"][31]\n            };\n            listings.push(_listing);\n          }\n\n          var listingData = {\n            listings: listings,\n            ajax_url: ajax_url,\n            todo: \"UpdateCommunityInfoToWP\",\n            from: \"spreadsheet_get_data\"\n          };\n          chrome.runtime.sendMessage(listingData, function (res) {\n            console.log(res);\n\n            if (res === \"Page Update Done\") {\n              // succeed, go to next page\n              // htmlTotalPages = $('#sp_1', parent.document);\n              // totalPages = (int)(htmlTotalPages.text());\n              if (currentPage < totalPages) {\n                console.log(\"(CommunityName & Neighborhoods) Updating Page:\".concat(currentPage + 1, \" Of \").concat(totalPages)); // go to update next page\n\n                _this3.onGetData(currentPage + 1);\n              } else {\n                alert(\"(CommunityName & Neighborhoods) All Pages:\".concat(totalPages, \" UPDATED!\"));\n              }\n            } else {\n              //failed, do not loop\n              console.log(res);\n            }\n          });\n        }.bind(this),\n        error: function error(jqXhr, textStatus, errorThrown) {\n          console.log(errorThrown);\n        }\n      });\n    }\n  }, {\n    key: \"onTaxSearch\",\n    value: function onTaxSearch() {\n      var parent = this.props.parent;\n      console.log(parent);\n      parent.searchTax();\n    }\n  }, {\n    key: \"onExp\",\n    value: function onExp() {\n      console.log(\"Export Listing Table Button Clicked!\");\n      var tabTitle = this.props.tabTitle; ////---- Get the col name row, push names to the cloned table head row\n\n      var htmlHead = document.querySelector(\".ui-jqgrid-htable\");\n      var cloneHead = $(htmlHead).clone().attr(\"id\", \"newClonedHead\");\n      var htmlTable = document.querySelector(\"#grid\");\n      var cloneTable = $(htmlTable).clone().attr(\"id\", \"newClonedTable\");\n      var rowHead = $(cloneHead).children().find(\"tr\");\n      var originalHeadCells = $(rowHead).children(\"th\");\n      var exportTableRows = $(cloneTable).children().find(\"tr\");\n      var row0 = $(exportTableRows[0]);\n      row0.height(40); //set the height of the table header\n\n      var newHeadCells = row0.children(\"td\"); /////----NORMALIZE THE COL NAMES, COPY TO NEW TABLE\n\n      this.normalizeColNames(newHeadCells, originalHeadCells); ////---- CHECK THE LANGUAGE ----////\n\n      if (this.state.language.is(\":checked\")) {\n        this.chineseColNames(newHeadCells);\n      } ////----SELECT COLUMNS FOR EXPORTING, MAKE THE TABLE FOR EXPORTING\n\n\n      var expType = $(\"select#SelectCMAType\", top.document); // get the select element defined by MainMenu.js\n\n      if (expType.find(\"option:selected\").text() === \"CMA4Exl\") {\n        //// ----only export to an excel file\n        this.selectExportTableRows(tabTitle, exportTableRows);\n        cloneTable.appendTo($(htmlTable));\n        this.tableToExcel(cloneTable.attr(\"id\"), \"Listings Table\");\n        cloneTable.remove();\n        return;\n      } else {\n        //// ----Send CMA records to mysql server\n        this.selectCMATableRows(tabTitle, exportTableRows);\n      } //////----PREPARE DATASET FOR MYSQL SERVER\n\n\n      var rowValues = [];\n\n      for (var i = 0; i < exportTableRows.length; i++) {\n        var row = exportTableRows[i];\n        var cells = $(row).children(\"td\");\n        var cellValues = [];\n        var cellValue = null;\n\n        for (var j = 0; j < cells.length; j++) {\n          cellValue = cells[j].innerText;\n          cellValues.push(cellValue);\n        } // ADD cma_ID to the array\n\n\n        var subjectOptions = $(\"select#SubjectProperty\", top.document); // get the select element defined by MainMenu.js\n\n        var cmaSubject = subjectOptions.children()[subjectOptions.prop(\"selectedIndex\")];\n        var cmaID = cmaSubject.getAttribute(\"cmaID\");\n        cellValues.push(cmaID); //push the cma Subject ID into the array\n\n        rowValues.push(cellValues);\n      } // Check the URL local or remote\n\n\n      var urlLocationOptionLocal = $(\"#pid_local\", top.document);\n      var urlLocation = urlLocationOptionLocal.prop(\"checked\");\n      var ajax_url = \"\";\n\n      if (urlLocation) {\n        // ajax_url =\n        //   \"http://localhost/pidrealty4/wp-content/themes/Realhomes-child-3/db/dbSaveCMAInfo.php\";\n        ajax_url = \"https://pidrealty4.local/wp-content/themes/Realhomes-child-3/db/dbSaveCMAInfo.php\";\n      } else {\n        ajax_url = \"https://pidhomes.ca/wp-content/themes/realhomes-child-3/db/dbSaveCMAInfo.php\";\n      }\n\n      ajax_url = $fx.getPIDAjaxUrl() + \"dbSaveCMAInfo.php\"; //////----DEFINE CMA OBJECT DATA\n\n      var cmaInfo = {\n        cmaData: rowValues,\n        ajax_url: ajax_url,\n        todo: \"saveCMAInfo\",\n        from: \"uiSummaryTable::onExp(save CMA Date)\"\n      }; ////SEND THE COMPLEX NAME INTO THE DATABASE BY CALL ADD.COMPLEX.INFO\n\n      chrome.runtime.sendMessage(cmaInfo, function (response) {\n        console.log(\"save CMA Info\");\n      });\n    } ////EXPORT TABLE TO EXCEL STEP 1\n\n  }, {\n    key: \"normalizeColNames\",\n    value: function normalizeColNames(newColCells, originalColCells) {\n      ////NORMALIZE THE COL NAMES OF THE SPREADSHEET TABLE\n      ////COPY THE NEW COL NAMES TO THE EXPORT TABLE HEAD\n      var colName = \"\";\n\n      for (var i = 0; i < newColCells.length; i++) {\n        colName = originalColCells[i].textContent.trim();\n        colName = colName.replace(\"1) \", \"\");\n        colName = colName.replace(\"2) \", \"\");\n        colName = colName.replace(\"3) \", \"\");\n\n        switch (colName) {\n          case \"?\":\n            colName = \"No\";\n            break;\n\n          case \"Price\":\n            colName = \"Price0\";\n            break;\n\n          case \"DisplayId\":\n            colName = \"MLS\";\n            break;\n\n          case \"landValue\":\n            //\"Room28Dim1\":\n            colName = \"LandValue\";\n            break;\n\n          case \"imprvValue\":\n            //\"Room28Dim2\":\n            colName = \"ImproveValue\";\n            break;\n\n          case \"totalValue\":\n            //\"Room28Lev\":\n            colName = \"BCAValue\";\n            break;\n\n          case \"change%\":\n            //\"Room28Type\":\n            colName = \"Change%\";\n            break;\n\n          case \"strataPlan\":\n            //\"Room27Dim1\":\n            colName = \"PlanNum\";\n            break;\n\n          case \"streetAddress\":\n            //\"Room27Dim2\":\n            colName = \"Address2\"; //FORMAL.ADDRESS FROM TAX REPORT\n\n            break;\n\n          case \"Unit#\":\n            //\"Room27Lev\":\n            colName = \"Unit#\";\n            break;\n        }\n\n        newColCells[i].textContent = colName;\n      }\n    } ////EXPORT TABLE TO EXCEL STEP 2\n\n  }, {\n    key: \"chineseColNames\",\n    value: function chineseColNames(newColNames) {\n      //// OUTPUT CHINESE HEAD LABLE\n      var colName = \"\";\n\n      for (var i = 0; i < newColNames.length; i++) {\n        colName = newColNames[i].textContent.trim();\n\n        switch (colName) {\n          case \"Complex/Subdivision\":\n            colName = \"小区\";\n            break;\n\n          case \"Price\":\n            colName = \"价格\";\n            break;\n\n          case \"Area\":\n            colName = \"区域\";\n            break;\n\n          case \"BCAValue\":\n            colName = \"政府估价\";\n            break;\n\n          case \"Strata Maint Fee\":\n          case \"StratMtFee\":\n            colName = \"管理费\";\n            break;\n\n          case \"Total Bedrooms\":\n          case \"Tot BR\":\n            colName = \"卧室\";\n            break;\n\n          case \"Total Baths\":\n          case \"Tot Baths\":\n            colName = \"卫生间\";\n            break;\n\n          case \"Address\":\n            colName = \"地址\";\n            break;\n\n          case \"Unit#\":\n            colName = \"单元号\";\n            break;\n\n          case \"Status\":\n            colName = \"挂牌状况\";\n            break;\n\n          case \"DOM\":\n            colName = \"上市天数\";\n            break;\n\n          case \"TotFlArea\":\n            colName = \"室内面积\";\n            break;\n\n          case \"Price Per SQFT\":\n            colName = \"单位呎价\";\n            break;\n\n          case \"Yr Blt\":\n            colName = \"建造年份\";\n            break;\n\n          case \"Change%\":\n            colName = \"变动幅度\";\n            break;\n\n          case \"S/A\":\n            colName = \"社区\";\n            break;\n\n          case \"Price Date\":\n            colName = \"上市日期\";\n            break;\n        }\n\n        newColNames[i].textContent = colName;\n      }\n    } ////EXPORT CMA/VPR TO MYSQL\n\n  }, {\n    key: \"selectCMATableRows\",\n    value: function selectCMATableRows(tabTitle, tableRows) {\n      if (tabTitle == \"Residential Attached\" || tabTitle == \"Residential Detached\" || tabTitle == \"Market Monitor\" || tabTitle == \"Listing Carts\" || tabTitle == \"Quick Search\" || tabTitle == \"Multi-Class\") {\n        for (var i = 0; i < tableRows.length; i++) {\n          var row = tableRows[i];\n\n          if (!$fx.inGreatVanArea($(row).children(\"td\").eq(32).text())) {\n            $(row).remove();\n          } else {\n            $(row).height(40); //REMOVE TAIL.CELLS 94 - 82\n\n            for (var j = 94; j >= 82; j--) {\n              $(row).children(\"td\").eq(j).remove();\n            } // 79 - 70\n\n\n            for (var j = 79; j >= 70; j--) {\n              $(row).children(\"td\").eq(j).remove();\n            } // 63-50\n\n\n            for (var j = 63; j >= 50; j--) {\n              $(row).children(\"td\").eq(j).remove();\n            } // 47 - 41\n\n\n            for (var j = 47; j >= 41; j--) {\n              $(row).children(\"td\").eq(j).remove();\n            } // 50\n            //REMOVE HEADER.CELLS\n\n\n            var RemovalHeadCellsNo = [39, 38, 37, 36, 34, 33, 24, 14, 9, 7, 6, 5, 4, 1, 0];\n\n            for (var j in RemovalHeadCellsNo) {\n              $(row).children(\"td\").eq(RemovalHeadCellsNo[j]).remove();\n            }\n          }\n        }\n      }\n\n      if (tabTitle == \"Tour and Open House\") {\n        for (var i = 0; i < tableRows.length; i++) {\n          var row = tableRows[i];\n\n          if (!$fx.inGreatVanArea($(row).children(\"td\").eq(32).text())) {\n            $(row).remove();\n          } else {\n            $(row).height(40); //REMOVE CELLS\n\n            var _RemovalHeadCellsNo = [94, 93, 92, 91, 40, 39, 38, 34, 28, 27, 20, 19, 18, 17, 8, 7, 6, 5, 4, 1, 0];\n\n            for (var j in _RemovalHeadCellsNo) {\n              $(row).children(\"td\").eq(_RemovalHeadCellsNo[j]).remove();\n            }\n          }\n        }\n      }\n    } ////EXPORT TABLE TO EXCEL STEP 3\n\n  }, {\n    key: \"selectExportTableRows\",\n    value: function selectExportTableRows(tabTitle, tableRows) {\n      if (tabTitle == \"Residential Attached\" || tabTitle == \"Residential Detached\" || tabTitle == \"Market Monitor\" || tabTitle == \"Listing Carts\" || tabTitle == \"Quick Search\" || tabTitle == \"Multi-Class\") {\n        for (var i = 0; i < tableRows.length; i++) {\n          var row = tableRows[i];\n\n          if (!$fx.inGreatVanArea($(row).children(\"td\").eq(32).text())) {\n            $(row).remove();\n          } else {\n            $(row).height(40); //REMOVE TAIL.CELLS 94 - 82\n\n            for (var j = 79; j >= 74; j--) {\n              $(row).children(\"td\").eq(j).remove();\n            } //REMOVE HEADER.CELLS\n\n\n            var RemovalHeadCellsNo = [7, 6, 5, 4, 1, 0];\n\n            for (var j in RemovalHeadCellsNo) {\n              $(row).children(\"td\").eq(RemovalHeadCellsNo[j]).remove();\n            }\n          }\n        }\n      }\n\n      if (tabTitle == \"Tour and Open House\") {\n        for (var i = 0; i < tableRows.length; i++) {\n          var row = tableRows[i];\n\n          if (!$fx.inGreatVanArea($(row).children(\"td\").eq(32).text())) {\n            $(row).remove();\n          } else {\n            $(row).height(40); //REMOVE CELLS\n\n            var _RemovalHeadCellsNo2 = [94, 93, 92, 91, 40, 39, 38, 34, 28, 27, 20, 19, 18, 17, 8, 7, 6, 5, 4, 1, 0];\n\n            for (var j in _RemovalHeadCellsNo2) {\n              $(row).children(\"td\").eq(_RemovalHeadCellsNo2[j]).remove();\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"tableToExcel\",\n    value: function tableToExcel(table, name) {\n      var uri = \"data:application/vnd.ms-excel;base64,\",\n          template = \"<html xmlns:o=\\\"urn:schemas-microsoft-com:office:office\\\" \\n        xmlns:x=\\\"urn:schemas-microsoft-com:office:excel\\\" xmlns=\\\"http://www.w3.org/TR/REC-html40\\\">\\n          <head><!--[if gte mso 9]>\\n            <xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>\\n                <x:Name>{worksheet}</x:Name>\\n                <x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions>\\n              </x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook>\\n            </xml><![endif]-->\\n          </head>\\n          <body>\\n            <table>{table}</table>\\n          </body>\\n        </html>\",\n          base64 = function base64(s) {\n        return window.btoa(unescape(encodeURIComponent(s)));\n      },\n          format = function format(s, c) {\n        return s.replace(/{(\\w+)}/g, function (m, p) {\n          return c[p];\n        });\n      };\n\n      table = \"#\" + table;\n      if (!table.nodeType) table = document.querySelector(table); //document.getElementById(table)\n\n      var ctx = {\n        worksheet: name || \"Worksheet\",\n        table: table.innerHTML\n      };\n      window.location.href = uri + base64(format(template, ctx));\n    }\n  }, {\n    key: \"onSaveSubjectInfo\",\n    value: function onSaveSubjectInfo() {\n      console.log(\"onSaveSubjectInfo button clicked!\");\n      var address = \"14043 109 AVE\";\n      var id = \"1234\"; ////////////////////\n      ////MANUALLY SAVE OR UPDATE COMPLEX NAME TO THE DATABASE\n      ////RECORD NO HAS TO BE LOOK UP THE CHECKED ONE IN THE TABLE\n\n      var tabTitle = this.props.tabTitle; //var self = this;\n\n      var cols = $fx.setCols(tabTitle); ////SEARCH CHECKED RECORD NO\n\n      var recordNo = 0;\n      var recordRow_i = null;\n      var SubjectAddress = \"\";\n      var streetAddress_i = \"\";\n      var cells_i = null;\n      var complexCell_i = null;\n      var recordNo_i = 0;\n      var recordCheckbox_i = null;\n      var htmlTable = document.querySelector(\"#grid\");\n      var recordRows = $(htmlTable).children().find(\"tr\");\n\n      for (var i = 1; i < recordRows.length; i++) {\n        recordRow_i = $(recordRows[i]); ////LOOP ALL THE ROWS IN THE TABLE\n\n        cells_i = recordRow_i.children();\n        recordNo_i = cells_i[cols.RecordNo];\n        recordCheckbox_i = $(cells_i[1]).children('input[type=\"checkbox\"]'); ////HARDWIRED THE COL NO 1 TO THE CHECKBOX COLUMN\n\n        if ($(recordCheckbox_i).prop(\"checked\") == true) {\n          recordNo = recordNo_i.textContent;\n          break;\n        }\n\n        recordNo = -1;\n      }\n\n      if (recordNo == -1) {\n        console.warn(\"No Record Selected!\");\n        return;\n      } else {\n        recordNo = (recordNo - 1) % 250 + 1;\n      } ////UPDATE THE COMPLEX NAME IN THE SPREAD SHEET\n\n\n      var recordRow = $(recordRows[recordNo]); ////FETCH THE SELECTED ROW AND ITS CELLS\n\n      var cells = recordRow.children(); ////PREPARE THE FIELDS FOR THE COMPLEX.INFO OBJECT\n\n      var subjectStreetAddress = cells[cols.StreetAddress].textContent;\n      var subjectUnitNo = cells[cols.UnitNo].textContent;\n      var subjectAge = cells[cols.Age].textContent;\n      var landSize = $fx.convertStringToDecimal(cells[cols.LotSize].textContent);\n      var floorArea = $fx.convertStringToDecimal(cells[cols.TotalFloorArea].textContent);\n      var bcAssessImprove = $fx.convertStringToDecimal(cells[cols.ImprovementValue].textContent);\n      var bcAssessLand = $fx.convertStringToDecimal(cells[cols.LandValue].textContent);\n      var bcAssessTotal = $fx.convertStringToDecimal(cells[cols.TotalValue].textContent);\n      var subjectHouseType = cells[cols.PropertyType].textContent;\n      var subjectDwellingType = cells[cols.HouseType].textContent;\n      var subjectCity = cells[cols.City].textContent;\n      var maintenanceFee = cells[cols.StrataFeePSF].textContent;\n      var neighborhood = cells[cols.Neighborhood].textContent;\n      var listPrice = $fx.convertStringToDecimal(cells[cols.ListPrice].textContent);\n      var soldPrice = $fx.convertStringToDecimal(cells[cols.SoldPrice].textContent);\n      var bcaChange = parseFloat(cells[cols.ChangeValuePercent].textContent) / 100.0;\n      var urlLocationOptionLocal = $(\"#pid_local\", top.document);\n      var htmlUpdateCurrentSubject = $(\"#checkUpdateSubjectInfo\", top.document);\n      var htmlCMAType = $(\"#SelectCMAType\", top.document);\n      var cmaType = htmlCMAType.val();\n      var urlLocation = urlLocationOptionLocal.prop(\"checked\");\n      var updateCurrentSubject = htmlUpdateCurrentSubject.prop(\"checked\"); // get cma id\n      // ADD cma_ID to the array\n\n      var subjectOptions = $(\"select#SubjectProperty\", top.document); // get the select element defined by MainMenu.js\n\n      var cmaSubject = subjectOptions.children()[subjectOptions.prop(\"selectedIndex\")];\n      var cmaID = cmaSubject.getAttribute(\"cmaID\");\n      var ajax_url = \"\";\n\n      if (urlLocation) {\n        // ajax_url =\n        //   \"http://localhost/pidrealty4/wp-content/themes/Realhomes-child-3/db/dbAddSubjectProperty.php\";\n        ajax_url = \"https://pidrealty4.local/wp-content/themes/Realhomes-child-3/db/dbAddSubjectProperty.php\";\n      } else {\n        ajax_url = \"https://pidhomes.ca/wp-content/themes/realhomes-child-3/db/dbAddSubjectProperty.php\";\n      }\n\n      ajax_url = $fx.getPIDAjaxUrl() + \"dbAddSubjectProperty.php\";\n      var subjectInfo = {\n        cmaID: cmaID,\n        cmaType: cmaType,\n        address: subjectStreetAddress,\n        unitNo: subjectUnitNo,\n        age: subjectAge,\n        landSize: landSize,\n        floorArea: floorArea,\n        bcAssessImprove: bcAssessImprove,\n        bcAssessLand: bcAssessLand,\n        bcAssessTotal: bcAssessTotal,\n        subjectHouseType: subjectHouseType,\n        subjectDwellingType: subjectDwellingType,\n        maintenanceFee: maintenanceFee,\n        city: subjectCity,\n        neighborhood: neighborhood,\n        listPrice: listPrice,\n        soldPrice: soldPrice,\n        bcaChange: bcaChange,\n        ajax_url: ajax_url,\n        updateSubject: updateCurrentSubject,\n        todo: \"saveSubjectInfo\",\n        from: \"uiSummaryTable\"\n      }; ////SEND THE COMPLEX NAME INTO THE DATABASE BY CALL ADD.COMPLEX.INFO\n\n      chrome.runtime.sendMessage(subjectInfo, function (response) {}); ////FEEDBACK THE INPUT AREA WITH ADDED STAR SIGN\n      // this.state.complexName.val(complexName + \"*\");\n      ///////////////\n    }\n  }, {\n    key: \"onSaveComplexInfo\",\n    value: function onSaveComplexInfo() {\n      ////MANUALLY SAVE OR UPDATE COMPLEX NAME TO THE DATABASE\n      ////RECORD NO HAS TO BE LOOK UP THE CHECKED ONE IN THE TABLE\n      var tabTitle = this.props.tabTitle; //var self = this;\n\n      var cols = $fx.setCols(tabTitle);\n      var complexName = $fx.normalizeComplexName(this.state.complexName.val()); ////NORMALIZED THE COMPLEX NAME\n\n      if (complexName.length == 0) {\n        console.warn(\"NOT INPUT A VALID COMPLEX NAME\");\n        return;\n      } ////SEARCH CHECKED RECORD NO\n\n\n      var recordNo = 0;\n      var recordRow_i = null;\n      var strataPlan_i = \"\";\n      var streetAddress_i = \"\";\n      var cells_i = null;\n      var complexCell_i = null;\n      var recordNo_i = 0;\n      var recordCheckbox_i = null;\n      var htmlTable = document.querySelector(\"#grid\");\n      var recordRows = $(htmlTable).children().find(\"tr\");\n\n      for (var i = 1; i < recordRows.length; i++) {\n        recordRow_i = $(recordRows[i]); ////LOOP ALL THE ROWS IN THE TABLE\n\n        cells_i = recordRow_i.children();\n        recordNo_i = cells_i[cols.RecordNo];\n        recordCheckbox_i = $(cells_i[1]).children('input[type=\"checkbox\"]'); ////HARDWIRED THE COL NO 1 TO THE CHECKBOX COLUMN\n\n        if ($(recordCheckbox_i).prop(\"checked\") == true) {\n          recordNo = recordNo_i.textContent;\n          break;\n        }\n\n        recordNo = -1;\n      }\n\n      if (recordNo == -1) {\n        console.warn(\"No Record Selected!\");\n        return;\n      } else {\n        recordNo = (recordNo - 1) % 250 + 1;\n      } ////UPDATE THE COMPLEX NAME IN THE SPREAD SHEET\n\n\n      var recordRow = $(recordRows[recordNo]); ////FETCH THE SELECTED ROW AND ITS CELLS\n\n      var cells = recordRow.children();\n      var strataPlan = cells[cols.StrataPlan].textContent;\n      var streetAddress = cells[cols.StreetAddress].textContent;\n\n      for (var i = 1; i < recordRows.length; i++) {\n        recordRow_i = $(recordRows[i]); ////LOOP ALL THE ROWS IN THE TABLE\n\n        cells_i = recordRow_i.children();\n        recordNo_i = cells_i[cols.RecordNo];\n        recordCheckbox_i = $(cells_i[2]).children().find('input[type=\"checkbox'); ////HARDWIRED THE COL NO 2 TO THE CHECKBOX COLUMN\n\n        complexCell_i = cells_i[cols.ComplexName];\n        strataPlan_i = cells_i[cols.StrataPlan].textContent;\n        streetAddress_i = cells_i[cols.StreetAddress].textContent;\n\n        if (strataPlan == strataPlan_i && streetAddress == streetAddress_i) {\n          complexCell_i.textContent = complexName;\n        }\n      } ////SAVE THE COMPLEX.INFO INTO THE DATABASE\n\n\n      if (complexName.length > 0) {\n        ////PREPARE THE FIELDS FOR THE COMPLEX.INFO OBJECT\n        var subArea = cells[cols.SubArea].textContent;\n        var neighborhood = cells[cols.Neighborhood].textContent;\n        var postcode = cells[cols.Postcode].textContent;\n        var houseType = cells[cols.HouseType].textContent;\n        var formalAddress = cells[cols.Address].textContent;\n        var isFormalAddress = true;\n        var address = new _modules_AddressInfoExport__WEBPACK_IMPORTED_MODULE_5__[\"default\"](formalAddress, houseType, isFormalAddress);\n        var strataPlan = cells[cols.StrataPlan].textContent;\n        var totalUnits = 0;\n        var devUnits = 0; ////ASSEMBLE THE COMPLEX INFO OBJECT\n\n        var complexInfo = {\n          _id: strataPlan + \"-\" + address.streetNumber + \"-\" + address.streetName + \"-\" + address.streetType,\n          name: complexName,\n          complexName: complexName,\n          strataPlan: strataPlan,\n          addDate: $fx.getToday(),\n          subArea: subArea,\n          neighborhood: neighborhood,\n          postcode: postcode,\n          streetNumber: address.streetNumber,\n          streetName: address.streetName + \" \" + address.streetType,\n          dwellingType: houseType,\n          totalUnits: totalUnits,\n          devUnits: devUnits,\n          todo: \"saveComplexInfo\",\n          from: \"uiSummaryTable\"\n        }; ////SEND THE COMPLEX NAME INTO THE DATABASE BY CALL ADD.COMPLEX.INFO\n\n        chrome.runtime.sendMessage(complexInfo, function (response) {}); ////FEEDBACK THE INPUT AREA WITH ADDED STAR SIGN\n\n        this.state.complexName.val(complexName + \"*\");\n      }\n    }\n  }, {\n    key: \"onSendTableInfoToBackground\",\n    value: function onSendTableInfoToBackground() {\n      console.log(\"send the listing table to background event page !!\");\n      var htmlTable = document.querySelector(\"#grid\");\n      var htmlHead = document.querySelector(\".ui-jqgrid-htable\");\n      var tableData = JSON.stringify(htmlTable.innerHTML);\n      var tagsToReplace = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\"\n      };\n\n      function replaceTag(tag) {\n        return tagsToReplace[tag] || tag;\n      }\n\n      function safe_tags_replace(str) {\n        return str.replace(/[&<>]/g, replaceTag);\n      }\n\n      var array = [];\n      var headers = [];\n      $(\".ui-jqgrid-htable th\").each(function (index, item) {\n        headers[index] = $(item).html().replace(/(<([^>]+)>)/gi, \"\").replace(\"&nbsp;\", \"\").substr(0, 50);\n      });\n      $(\"#grid tr\").has(\"td\").each(function () {\n        var arrayItem = {};\n        $(\"td\", $(this)).each(function (index, item) {\n          arrayItem[headers[index]] = $(item).html().replace(/(<([^>]+)>)/gi, \"\").replace(\"&nbsp;\", \"\");\n        });\n        array.push(arrayItem);\n      });\n      var tableInfo = {\n        table: JSON.stringify(array),\n        todo: \"saveTableInfo\",\n        from: \"uiSummaryTable::onSendTableToBackground\"\n      }; ////SEND THE COMPLEX NAME INTO THE DATABASE BY CALL ADD.COMPLEX.INFO\n\n      chrome.runtime.sendMessage(tableInfo, function (response) {\n        console.log(\"save CMA Info\");\n      });\n    }\n  }]);\n\n  return SumBoxButtons;\n}(React.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SumBoxButtons); ////////////////////RECYCLE ZONE////////////////////\n//------------------------------------------------//\n//const e = React.createElement;\n// var tableToExcel = (function() {\n//   var uri = \"data:application/vnd.ms-excel;base64,\",\n//     template =\n//       '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>',\n//     base64 = function(s) {\n//       return window.btoa(unescape(encodeURIComponent(s)));\n//     },\n//     format = function(s, c) {\n//       return s.replace(/{(\\w+)}/g, function(m, p) {\n//         return c[p];\n//       });\n//     };\n//   return function(table, name) {\n//     if (!table.nodeType) table = document.querySelector(table); //document.getElementById(table)\n//     var ctx = { worksheet: name || \"Worksheet\", table: table.innerHTML };\n//     window.location.href = uri + base64(format(template, ctx));\n//   };\n// })();\n// $(row)\n//   .children(\"td\")\n//   .eq(40)\n//   .remove(); //\n// $(row)\n//   .children(\"td\")\n//   .eq(39)\n//   .remove(); //Floor Plan Url\n// $(row)\n//   .children(\"td\")\n//   .eq(38)\n//   .remove();\n// $(row)\n//   .children(\"td\")\n//   .eq(34)\n//   .remove(); //\n// $(row)\n//   .children(\"td\")\n//   .eq(28)\n//   .remove(); //Floor Plan Url\n// $(row)\n//   .children(\"td\")\n//   .eq(27)\n//   .remove(); //Building Plan\n// $(row)\n//   .children(\"td\")\n//   .eq(20)\n//   .remove(); //ML # with Link\n// $(row)\n//   .children(\"td\")\n//   .eq(19)\n//   .remove(); //Status\n// $(row)\n//   .children(\"td\")\n//   .eq(18)\n//   .remove(); //Postal Code\n// $(row)\n//   .children(\"td\")\n//   .eq(17)\n//   .remove(); //Province\n// $(row)\n//   .children(\"td\")\n//   .eq(8)\n//   .remove(); //ML # with Link\n// $(row)\n//   .children(\"td\")\n//   .eq(7)\n//   .remove(); //ML # with Link\n// $(row)\n//   .children(\"td\")\n//   .eq(6)\n//   .remove(); //Action Icons\n// $(row)\n//   .children(\"td\")\n//   .eq(5)\n//   .remove(); //Pcitures\n// $(row)\n//   .children(\"td\")\n//   .eq(4)\n//   .remove(); //Pictures NO\n// //$(row).children('td').eq(3).remove(); //Keep the records number\n// $(row)\n//   .children(\"td\")\n//   .eq(2)\n//   .remove(); //Hidden\n// $(row)\n//   .children(\"td\")\n//   .eq(1)\n//   .remove(); //Hidden\n\n//# sourceURL=webpack:///./app/assets/scripts/components/sumBoxButtons.js?");

/***/ }),

/***/ "./app/assets/scripts/components/sumBoxPanel.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\nvar SumBoxPanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(SumBoxPanel, _React$Component);\n\n  function SumBoxPanel(props) {\n    var _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SumBoxPanel);\n\n    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(SumBoxPanel).call(this, props));\n    console.log(props);\n    return _this;\n  } // handleClick(e) {\n  //   console.log(\"test click\", e);\n  //   //return false;\n  // }\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(SumBoxPanel, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(oldProps) {\n      // const newProps = this.props\n      // if(oldProps.field !== newProps.field) {\n      //   this.setState({ ...something based on newProps.field... })\n      // }\n      console.warn(\"REACT UPDATED\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var panel = this.props.panel;\n      var boxClass = \"f-summary-data-box\";\n      var labelPanel = \"sumBoxPanel0\";\n      return React.createElement(React.Fragment, null, React.createElement(\"tr\", null, React.createElement(\"td\", null, React.createElement(\"span\", null, panel.labels.name)), React.createElement(\"td\", null, panel.id == labelPanel ? React.createElement(\"span\", {\n        onClick: this.props.onClick\n      }, panel.labels.high) : React.createElement(\"div\", {\n        id: panel.labels.high,\n        className: boxClass\n      }, panel.values.high)), React.createElement(\"td\", null, panel.id == labelPanel ? React.createElement(\"span\", null, panel.labels.low) : React.createElement(\"div\", {\n        id: panel.labels.low,\n        className: boxClass\n      }, panel.values.low)), React.createElement(\"td\", null, panel.id == labelPanel ? React.createElement(\"span\", null, panel.labels.ave) : React.createElement(\"div\", {\n        id: panel.labels.ave,\n        className: boxClass\n      }, panel.values.ave)), React.createElement(\"td\", null, panel.id == labelPanel ? React.createElement(\"span\", null, panel.labels.med) : React.createElement(\"div\", {\n        id: panel.labels.med,\n        className: boxClass\n      }, panel.values.med)), React.createElement(\"td\", null, panel.id == labelPanel ? React.createElement(\"span\", null, panel.labels.count) : React.createElement(\"div\", {\n        id: panel.labels.count,\n        className: boxClass\n      }, panel.values.count))));\n    }\n  }]);\n\n  return SumBoxPanel;\n}(React.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SumBoxPanel);\n\n//# sourceURL=webpack:///./app/assets/scripts/components/sumBoxPanel.js?");

/***/ }),

/***/ "./app/assets/scripts/components/sumBoxPanels.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _sumBoxPanel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./app/assets/scripts/components/sumBoxPanel.js\");\n\n\n\n\n\n\n\n\n\nvar sumBoxPanels =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(sumBoxPanels, _React$Component);\n\n  function sumBoxPanels(props) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, sumBoxPanels);\n\n    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(sumBoxPanels).call(this, props)); // this.state = {\n    //   panels: [\n    //     {\n    //       id: \"sumBoxPanel0\",\n    //       labels: {\n    //         name: \"Name\",\n    //         high: \"High\",\n    //         low: \"Low\",\n    //         ave: \"Ave\",\n    //         med: \"Med\",\n    //         total: \"Total\"\n    //       },\n    //       values: {\n    //         high: 0,\n    //         low: 0,\n    //         ave: 0,\n    //         med: 0,\n    //         total: 0\n    //       }\n    //     },\n    //     {\n    //       id: \"sumBoxPanel1\",\n    //       labels: {\n    //         name: \"LP/SF\",\n    //         high: \"HighAskingPricePSF\",\n    //         low: \"LowAskingPricePSF\",\n    //         ave: \"AverageAskingPricePSF\",\n    //         med: \"MedianAskingPricePSF\",\n    //         total: \"TotalAskingPSF\"\n    //       },\n    //       values: {\n    //         high: 100,\n    //         low: 0,\n    //         ave: 0,\n    //         med: 0,\n    //         total: 0\n    //       }\n    //     },\n    //     {\n    //       id: \"sumBoxPanel2\",\n    //       labels: {\n    //         name: \"SP/SF\",\n    //         high: \"HighSoldPricePSF\",\n    //         low: \"LowSoldPricePSF\",\n    //         ave: \"AverageSoldPricePSF\",\n    //         med: \"MedianSoldPrice\",\n    //         total: \"TotalSoldPSF\"\n    //       },\n    //       values: {\n    //         high: 0,\n    //         low: 0,\n    //         ave: 0,\n    //         med: 0,\n    //         total: 0\n    //       }\n    //     }\n    //   ]\n    // };\n  } // handleClick(panel) {\n  //   console.log(\"label clicked\", panel);\n  //   let panels = [...this.state.panels];\n  //   let index = panels.indexOf(panel);\n  //   console.log(panels, index);\n  //   // panels[index].values.high = 200;\n  //   panels[1].values.high = 300;\n  //   this.setState({ panels });\n  // }\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(sumBoxPanels, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"table\", {\n        style: {\n          padding: 0\n        }\n      }, React.createElement(\"tbody\", null, this.props.panels.map(function (panel) {\n        return React.createElement(_sumBoxPanel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n          key: panel.id,\n          panel: panel,\n          onClick: function onClick() {\n            return _this.props.onClick(panel);\n          }\n        });\n      })));\n    }\n  }]);\n\n  return sumBoxPanels;\n}(React.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (sumBoxPanels);\n\n//# sourceURL=webpack:///./app/assets/scripts/components/sumBoxPanels.js?");

/***/ }),

/***/ "./app/assets/scripts/modules/AddressInfoExport.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AddressInfo; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n\n\n//// ANALYSE THE CIVIC ADDRESS INFORMATION\n//// NORMALIZE THE ADDRESS IF IT IS NOT A FORMAL.BCA.ADDRESS\n// this module is used for exporting\n// 2022/01/20\nvar AddressInfo = function AddressInfo(address, houseType, formal) {\n  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, AddressInfo);\n\n  address = address.replace(\".\", \"\");\n  this.isFormalAddress = formal == undefined ? false : formal;\n  this.houseType = houseType ? houseType : \"AUTO\";\n  houseType = this.houseType;\n  this.addressParts = address.split(\" \"); ////SPLIT THE ADDRESS TO PARTS.ARRAY\n  ////LOOK FOR UNIT NO, THEN REMOVE THE UNIT.NO FROM THE ADDRESS.PARTS.ARRAY\n\n  this.UnitNo = \"\";\n\n  switch (houseType.toUpperCase()) {\n    case \"TOWNHOUSE\":\n    case \"APARTMENT\":\n    case \"APARTMENT/CONDO\":\n    case \"CONDO\":\n    case \"ATTACHED\":\n      houseType = \"Attached\";\n      break;\n\n    case \"AUTO\":\n      ////HOUSE TYPE COULD BE TOLD FROM IF THERE IS A UNIT NO OR NOT\n      if (address.indexOf(\"UNIT#\") > -1) {\n        houseType = \"Attached\";\n      } else {\n        houseType = \"Detached\";\n      }\n\n      break;\n\n    default:\n      houseType = \"Detached\";\n      break;\n  }\n\n  this.houseType = houseType; ////FORMAL.ADDRESS IS FROM THE BC.ASSESSMENT RESULT\n\n  if (this.isFormalAddress) {\n    if (houseType == \"Attached\") {\n      if (this.addressParts.length > 3) {\n        this.UnitNo = this.addressParts.pop();\n        this.addressParts.pop();\n      } else {\n        this.UnitNo = \"TBA\";\n      }\n    }\n  } else {\n    if (houseType == \"Attached\") {\n      if (this.addressParts.length > 3) {\n        this.UnitNo = this.addressParts.shift();\n      } else {\n        this.UnitNo = \"TBA\";\n      }\n    }\n  }\n\n  this.streetNumber = this.addressParts.shift();\n  this.streetType = this.addressParts.pop(); ////STREET, AVENUE, BOULEVARD, HIGHWAY...\n\n  this.streetName = this.addressParts.toString().replace(\",\", \"-\");\n  var streetType = this.streetType.trim().toString().toUpperCase(); ////STANDARDIZE THE STREET.TYPE TO ABBREVIATIONS: ST, AV, BV, HW, CR, ...\n\n  switch (streetType) {\n    case \"AVENUE\":\n      streetType = \"AV\";\n      break;\n\n    case \"STREET\":\n      streetType = \"ST\";\n      break;\n\n    case \"DRIVE\":\n      streetType = \"DR\";\n      break;\n\n    case \"BOULEVARD\":\n      streetType = \"BV\";\n      break;\n\n    case \"BYPASS\":\n      streetType = \"BP\";\n      break;\n\n    case \"CRESCENT\":\n      streetType = \"CR\";\n      break;\n\n    default:\n      streetType = streetType;\n      break;\n  }\n\n  this.streetType = streetType; ////GET FORMAL.BCA.ADDRESS\n\n  this.formalAddress = this.streetNumber + \" \" + this.streetName.replace(\"-\", \" \") + \" \" + this.streetType;\n\n  if (this.UnitNo) {\n    this.formalAddress = this.formalAddress + \" UNIT# \" + this.UnitNo;\n  } ////GET ADDRESS.ID FOR STRATA.PLAN.ID\n\n\n  this.addressID = \"-\" + this.streetNumber + \"-\" + this.streetName + \"-\" + this.streetType; ////GET STREET.ADDRESS WITHOUT UNIT.NO\n\n  this.streetAddress = this.streetNumber + \" \" + this.streetName.replace(\"-\", \" \") + \" \" + this.streetType; ////GET GOOGLE.SEARCH.LINK FOR COMPLEX.NAME FORM BC.CONDOS.COM\n\n  this.googleSearchLink = \"https://www.google.com/search?q=\" + this.streetAddress.split(\" \").join(\"+\");\n\n  if (this.houseType != \"Detached\") {\n    this.googleSearchLink += '+\"BCCONDOS\"+BUILDING+INFO';\n  }\n};\n\n\n\n//# sourceURL=webpack:///./app/assets/scripts/modules/AddressInfoExport.js?");

/***/ }),

/***/ "./app/assets/scripts/modules/Assessment.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n// Assessment information <=> mySQL table wp_pid_assess\n // const $fx = $L();\n\n\n\nvar DATA_ASSESSMENT_API_URL_LOCAL = \"https://pidrealty4.local/wp-content/themes/realhomes-child-3/db/dataAssessInfo.php\";\nvar DATA_ASSESSMENT_API_URL_LIVE = \"https://pidhomes.ca/wp-content/themes/realhomes-child-3/db/dataAssessInfo.php\";\n\nvar postAssessInfo = function postAssessInfo(assessInfos, $fx) {\n  //console.log(this.complexInfos);\n  var urlLocationOptionLocal = $(\"#pid_local\", top.document);\n  var urlLocation = urlLocationOptionLocal.prop(\"checked\");\n  var ajax_url = \"\";\n\n  if (urlLocation) {\n    // ajax_url =\n    //   \"https://pidrealty4.local/wp-content/themes/realhomes-child-3/db/dataAssessInfo.php\";\n    ajax_url = DATA_ASSESSMENT_API_URL_LOCAL;\n  } else {\n    // ajax_url =\n    //   \"https://pidhomes.ca/wp-content/themes/realhomes-child-3/db/dataAssessInfo.php\";\n    ajax_url = DATA_ASSESSMENT_API_URL_LIVE;\n  }\n\n  ajax_url = $fx.getPIDAjaxUrl() + \"dataAssessInfo.php\";\n  $.ajax({\n    url: ajax_url,\n    method: \"post\",\n    data: {\n      assessInfos: assessInfos\n    },\n    success: function success(res) {\n      console.log(\"ajax::\", res);\n      res = JSON.parse(res);\n      res.forEach(function (assessInfo) {\n        console.log(assessInfo);\n      });\n    }\n  });\n};\n\nvar Assessment =\n/*#__PURE__*/\nfunction () {\n  function Assessment() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Assessment);\n\n    this.assessInfos = null;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Assessment, [{\n    key: \"postAssessInfos\",\n    value: function postAssessInfos(assessInfos, $fx) {\n      var urlLocationOptionLocal = $(\"#pid_local\", top.document);\n      var urlLocation = urlLocationOptionLocal.prop(\"checked\");\n      var ajax_url = \"\";\n\n      if (urlLocation) {\n        ajax_url = DATA_ASSESSMENT_API_URL_LOCAL;\n      } else {\n        ajax_url = DATA_ASSESSMENT_API_URL_LIVE;\n      }\n\n      ajax_url = $fx.getPIDAjaxUrl() + \"dataAssessInfo.php\";\n      $.ajax({\n        url: ajax_url,\n        method: \"post\",\n        data: {\n          assessInfos: assessInfos\n        },\n        success: function success(res) {\n          console.log(\"ajax::\", res);\n          res = JSON.parse(res);\n          res.forEach(function (assessInfo) {\n            console.log(assessInfo);\n          });\n        }\n      });\n    }\n  }]);\n\n  return Assessment;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Assessment);\n\n//# sourceURL=webpack:///./app/assets/scripts/modules/Assessment.js?");

/***/ }),

/***/ "./app/assets/scripts/modules/Complex.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n// Complex information <=> mySQL table wp_pid_complex\n\n\n\n\nvar DATA_COMPLEX_API_URL_LOCAL = \"https://pidrealty4.local/wp-content/themes/Realhomes-child-3/db/dataComplexInfo.php\"; // const DATA_COMPLEX_API_URL_LOCAL_OBSOLETE = \"http://localhost/pidrealty4/wp-content/themes/Realhomes-child-3/db/dataComplexInfo.php\";\n\nvar DATA_COMPLEX_API_URL_LIVE = \"https://pidhomes.ca/wp-content/themes/realhomes-child-3/db/dataComplexInfo.php\";\n\nvar Complex =\n/*#__PURE__*/\nfunction () {\n  function Complex() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Complex);\n\n    this.complexInfos = null;\n  } // Insert or Update the complex information to mySQL Table WP_PID_COMPLEX\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Complex, [{\n    key: \"postComplexInfos\",\n    value: function postComplexInfos(complexInfos, $fx) {\n      var uniqueComplexInfos = $fx.normalizeComplexInfos(complexInfos);\n      var urlLocationOptionLocal = $(\"#pid_local\", top.document);\n      var urlLocation = urlLocationOptionLocal.prop(\"checked\");\n      var ajax_url = \"\";\n\n      if (urlLocation) {\n        ajax_url = DATA_COMPLEX_API_URL_LOCAL;\n      } else {\n        ajax_url = DATA_COMPLEX_API_URL_LIVE;\n      }\n\n      ajax_url = $fx.getPIDAjaxUrl() + \"dataAssessInfo.php\";\n      $.ajax({\n        url: ajax_url,\n        method: \"post\",\n        data: {\n          complexInfos: uniqueComplexInfos\n        },\n        success: function success(res) {\n          console.log(\"ajax::\", res);\n          res = JSON.parse(res);\n          res.forEach(function (complexInfo) {\n            console.log(complexInfo);\n          });\n        }\n      });\n    }\n  }]);\n\n  return Complex;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Complex);\n\n//# sourceURL=webpack:///./app/assets/scripts/modules/Complex.js?");

/***/ }),

/***/ "./app/assets/scripts/ui/uiSummaryTable.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return UISummaryTable; });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_sumBoxButtons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./app/assets/scripts/components/sumBoxButtons.js\");\n/* harmony import */ var _components_sumBoxPanels__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./app/assets/scripts/components/sumBoxPanels.js\");\n//// UI ELEMENT: Extra Summary Table\n\n\n\n\n\n\n\nvar $fx = L$();\n\nvar UISummaryTable =\n/*#__PURE__*/\nfunction () {\n  function UISummaryTable(parent) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, UISummaryTable);\n\n    this.parent = parent;\n    this.tabTitle = \"\";\n    this.state = {\n      panels: [{\n        id: \"sumBoxPanel0\",\n        labels: {\n          name: \"Name\",\n          high: \"High\",\n          low: \"Low\",\n          ave: \"Ave\",\n          med: \"Med\",\n          count: \"Count\"\n        },\n        values: {\n          name: \"\",\n          high: 0,\n          low: 0,\n          ave: 0,\n          med: 0,\n          count: 0\n        }\n      }, {\n        id: \"sumBoxPanel1\",\n        labels: {\n          name: \"LP/SF\",\n          high: \"HighAskingPricePSF\",\n          low: \"LowAskingPricePSF\",\n          ave: \"AverageAskingPricePSF\",\n          med: \"MedianAskingPricePSF\",\n          count: \"TotalAskingPSF\"\n        },\n        values: {\n          high: 0,\n          low: 0,\n          ave: 0,\n          med: 0,\n          count: 0\n        }\n      }, {\n        id: \"sumBoxPanel2\",\n        labels: {\n          name: \"SP/SF\",\n          high: \"HighSoldPricePSF\",\n          low: \"LowSoldPricePSF\",\n          ave: \"AverageSoldPricePSF\",\n          med: \"MedianSoldPrice\",\n          count: \"TotalSoldPSF\"\n        },\n        values: {\n          high: 0,\n          low: 0,\n          ave: 0,\n          med: 0,\n          count: 0\n        }\n      }]\n    };\n    this.$UITable = $(\"<div id = \\\"SummaryFunctionBox\\\" style = 'top: 30px; left: 850px; position: absolute'>\\n                            <div id = \\\"sumButtonContainer\\\" style = \\\"z-index: 999\\\" ></div>\\n                            <div id = \\\"sumPanelContainer\\\" style = 'top: 0px; left: 100px; position: absolute'></div>\\n                            <div id = \\\"sumPanelBCAChangeContainer\\\" style = 'top: 0px; left: 360px; position: absolute'></div>\\n                            <div id = \\\"sumPanelBCAContainer\\\" style = 'top: 0px; left: 600px; position: absolute'></div>\\n                        </div>\");\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(UISummaryTable, [{\n    key: \"handleClick\",\n    value: function handleClick(panel) {\n      console.log(\"click handled in summary box\", panel);\n      var tempPanel = panel;\n      tempPanel.labels.high = \"HIGH\";\n    }\n  }, {\n    key: \"showUI\",\n    value: function showUI(container) {\n      this.$UITable.appendTo(container);\n      var btnContainer = parent.document.querySelector(\"#sumButtonContainer\");\n      ReactDOM.render(React.createElement(_components_sumBoxButtons__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        tabTitle: this.tabTitle,\n        parent: this.parent\n      }), btnContainer);\n      this.render(1); //registerServiceWorker();\n    }\n  }, {\n    key: \"setSumValue\",\n    value: function setSumValue(id, key, value, unit) {\n      this.state.panels[id].values[key] = Number.isFinite(parseInt(value)) ? unit == \"%\" ? value + \"%\" : \"$\" + value : 0;\n    }\n  }, {\n    key: \"setSumValues\",\n    value: function setSumValues(id, sumValues, count, unit) {\n      var sumValues = {\n        high: sumValues.length == 0 ? 0 : Math.max.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(sumValues)).toFixed(0),\n        low: sumValues.length == 0 ? 0 : Math.min.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(sumValues)).toFixed(0),\n        ave: sumValues.length == 0 ? 0 : $fx.mean(sumValues),\n        med: sumValues.length == 0 ? 0 : $fx.median(sumValues)\n      };\n\n      for (var key in sumValues) {\n        this.setSumValue(id, key, sumValues[key], unit);\n      }\n\n      this.state.panels[id].values[\"count\"] = parseInt(count);\n    }\n  }, {\n    key: \"render\",\n    value: function render(id) {\n      switch (id) {\n        case 1:\n          this.state.panels[0].labels.name = \"$PSF\";\n          var panelContainer = parent.document.querySelector(\"#sumPanelContainer\");\n          ReactDOM.render(React.createElement(_components_sumBoxPanels__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n            key: id,\n            panels: this.state.panels,\n            onClick: this.handleClick\n          }), panelContainer);\n          break;\n\n        case 2:\n          this.state.panels[0].labels.name = \"BCA%\";\n          this.state.panels[1].labels.name = \"L:%\";\n          this.state.panels[2].labels.name = \"S:%\";\n          var panelBCAChangeContainer = parent.document.querySelector(\"#sumPanelBCAChangeContainer\");\n          ReactDOM.render(React.createElement(_components_sumBoxPanels__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n            key: id,\n            panels: this.state.panels,\n            onClick: this.handleClick\n          }), panelBCAChangeContainer);\n          break;\n\n        case 3:\n          this.state.panels[0].labels.name = \"BCA\";\n          this.state.panels[1].labels.name = \"L:$B\";\n          this.state.panels[2].labels.name = \"S:$B\";\n          var panelBCAContainer = parent.document.querySelector(\"#sumPanelBCAContainer\");\n          ReactDOM.render(React.createElement(_components_sumBoxPanels__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n            key: id,\n            panels: this.state.panels,\n            onClick: this.handleClick\n          }), panelBCAContainer);\n          break;\n      }\n    }\n  }]);\n\n  return UISummaryTable;\n}(); ///////////////////////RECYCLE ZONE////////////////////////////\n////-------------------------------------------------------////\n\n\n\n{}\n/* <button type=\"button\" id=\"btnExport\" title=\"Export to Excel\" style = \"position: absolute; width: 60px; z-index: 999\" >Exp</button>\r\n<button type=\"button\" id=\"btnAssess\" title=\"Update BCA Assess\" style = \"top: 20px; width: 60px; position: absolute; z-index: 999\" >Bca</button>\r\n<button type=\"button\" id=\"btnComplex\" title=\"Update Complex Name\" style = \"top: 40px; width: 60px; position: absolute; z-index: 999\" >Cpx</button> */\n// addComplexInfo(complex) {\n//     var self = this;\n//     ////PREPARE THE INFORMATION FIELDS FOR THE COMPLEX.INFO OBJECT\n//     ////FETCH ALL THE INFORMTION FROM THE SELECTED ROW\n// \tvar subArea = self.subArea.text();\n// \tvar neighborhood = self.neighborhood.text();\n// \tvar postcode = self.postcode.text();\n// \tvar dwellingType = self.dwellingType.text();\n// \tvar complexName = complex || self.complexOrSubdivision.text().trim();\n// \tcomplexName = $fx.normalizeComplexName(complexName);\n// \tif(typeof complexName != 'string' && complexName.length<=0){\n// \t\tconsole.log(\"ComplexName does not existed\"); ////exit\n// \t\treturn;\n// \t}\n// \tvar addressSelect = '';\n// \tvar isFormalAddress = true;\n// \tif(typeof self.formalAddress.text() ==\"string\" && self.formalAddress.text().length > 0 ){\n// \t\taddressSelect = self.formalAddress.text();\n// \t}else{\n// \t\taddressSelect = self.address.text();\n// \t\tisFormalAddress = false;\n// \t}\n// \tvar address = new addressInfo(addressSelect, this.houseListingType, isFormalAddress);\n// \tvar strataPlan = self.strataPlan;\n// \tvar totalUnits = self.totalUnits.text();\n// \tvar devUnits = self.devUnits.text();\n//     ////ASSEMBLE THE COMPLEX INFO OBJECT\n// \tvar complexInfo = {\n// \t\t_id: strataPlan + '-' + address.streetNumber + '-' + address.streetName + '-' + address.streetType,\n// \t\tname: $fx.normalizeComplexName(complexName),\n// \t\tcomplexName: complexName,\n// \t\tstrataPlan: strataPlan,\n// \t\taddDate: $fx.getToday(),\n// \t\tsubArea: subArea,\n// \t\tneighborhood: neighborhood,\n// \t\tpostcode: postcode,\n// \t\tstreetNumber: address.streetNumber,\n// \t\tstreetName: address.streetName + address.streetType,\n// \t\tdwellingType: dwellingType,\n// \t\ttotalUnits: totalUnits,\n// \t\tdevUnits: devUnits,\n// \t\ttodo: \"saveComplex\",\n// \t\tfrom: \"spreadSheet\"\n//     }\n//     ////SEND 'SAVE.COMPLEX' REQUEST TO BACKGROUND PAGE\n// \tchrome.runtime.sendMessage(\n// \t\tcomplexInfo,\n// \t\tfunction (response) {\n// \t\t\tif (response) {\n// \t\t\t\tself.complexName.text(response.name);\n// \t\t\t\tself.complexOrSubdivision.text(response.name);\n// \t\t\t}\n// \t\t}\n// \t)\n// }\n//this.language = $(\"div#reportlanguage input\", top.document);\n// this.complex = $(\n//   \"div#app_banner_links_left input.select2-search__field\",\n//   top.document\n// );\n//this.onExportClick();\n//this.onComplexClick();\n//this.onAssessClick();\n//   onAssessClick() {\n//     var self = this;\n//     $(this.$UITable.children().find(\"#btnAssess\")).click(\n//       function() {\n//         //console.log('export');\n//         this.ContinueTaxSearch(\"#grid\");\n//       }.bind(self)\n//     );\n//   }\n//   onExportClick() {\n//     var self = this;\n//     $(this.$UITable.children().find(\"#btnExport\")).click(\n//       function() {\n//         //console.log('export');\n//         this.ExportToExcel(\"#grid\");\n//       }.bind(self)\n//     );\n//   }\n//   onComplexClick() {\n//     var self = this;\n//     $(this.$UITable.children().find(\"#btnComplex\")).click(\n//       function() {\n//         //console.log('export');\n//         this.saveComplexInfo(self.tabTitle);\n//       }.bind(self)\n//     );\n//   }\n//   ExportToExcel(tableID) {\n//     ////---- Get the col name row, push names to the cloned table head row\n//     var htmlHead = document.querySelector(\".ui-jqgrid-htable\");\n//     var cloneHead = $(htmlHead)\n//       .clone()\n//       .attr(\"id\", \"newClonedHead\");\n//     var htmlTable = document.querySelector(\"#grid\");\n//     var cloneTable = $(htmlTable)\n//       .clone()\n//       .attr(\"id\", \"newClonedTable\");\n//     var rowHead = $(cloneHead)\n//       .children()\n//       .find(\"tr\");\n//     var headCells = $(rowHead).children(\"th\");\n//     var rowsBody = $(cloneTable)\n//       .children()\n//       .find(\"tr\");\n//     var row0 = $(rowsBody[0]);\n//     row0.height(40); //set the height of the table header\n//     var oldHeadCells = row0.children(\"td\");\n//     /////----Normalize the col names\n//     var colName = \"\";\n//     for (var i = 0; i < oldHeadCells.length; i++) {\n//       colName = headCells[i].textContent.trim();\n//       colName = colName.replace(\"1)\", \"\");\n//       colName = colName.replace(\"2)\", \"\");\n//       colName = colName.replace(\"3)\", \"\");\n//       switch (colName) {\n//         case \"?\":\n//           colName = \"No\";\n//           break;\n//         case \"DisplayId\":\n//           colName = \"MLS#\";\n//           break;\n//         case \"Room28Lev\":\n//           colName = \"BCAValue\";\n//           break;\n//         case \"Room28Dim1\":\n//           colName = \"LandValue\";\n//           break;\n//         case \"Room28Dim2\":\n//           colName = \"ImproveValue\";\n//           break;\n//         case \"Room28Type\":\n//           colName = \"Change%\";\n//           break;\n//         case \"Room27Lev\":\n//           colName = \"Address\";\n//           break;\n//         case \"Room27Dim2\":\n//           colName = \"Unit#\";\n//           break;\n//       }\n//       oldHeadCells[i].textContent = colName;\n//     }\n//     ////---- CHECK THE LANGUAGE ----////\n//     if (this.language.is(\":checked\")) {\n//       //// OUTPUT CHINESE HEAD LABLE\n//       for (var i = 0; i < oldHeadCells.length; i++) {\n//         colName = oldHeadCells[i].textContent.trim();\n//         switch (colName) {\n//           case \"Complex/Subdivision\":\n//             colName = \"小区\";\n//             break;\n//           case \"Price\":\n//             colName = \"价格\";\n//             break;\n//           case \"BCAValue\":\n//             colName = \"政府估价\";\n//             break;\n//           case \"Strata Maint Fee\":\n//           case \"StratMtFee\":\n//             colName = \"管理费\";\n//             break;\n//           case \"Total Bedrooms\":\n//           case \"Tot BR\":\n//             colName = \"卧室\";\n//             break;\n//           case \"Total Baths\":\n//           case \"Tot Baths\":\n//             colName = \"卫生间\";\n//             break;\n//           case \"Address\":\n//             colName = \"地址\";\n//             break;\n//           case \"Unit#\":\n//             colName = \"单元号\";\n//             break;\n//           case \"Status\":\n//             colName = \"挂牌状况\";\n//             break;\n//           case \"DOM\":\n//             colName = \"上市天数\";\n//             break;\n//           case \"TotFlArea\":\n//             colName = \"室内面积\";\n//             break;\n//           case \"Price Per SQFT\":\n//             colName = \"单位呎价\";\n//             break;\n//           case \"Yr Blt\":\n//             colName = \"建造年份\";\n//             break;\n//           case \"Change%\":\n//             colName = \"变动幅度\";\n//             break;\n//           case \"S/A\":\n//             colName = \"社区\";\n//             break;\n//           case \"Price Date\":\n//             colName = \"上市日期\";\n//             break;\n//         }\n//         oldHeadCells[i].textContent = colName;\n//       }\n//     }\n//     if (this.tabTitle == \"Residential Attached\") {\n//       for (var i = 0; i < rowsBody.length; i++) {\n//         var row = rowsBody[i];\n//         $(row).height(40);\n//         for (var j = 72; j >= 39; j--) {\n//           $(row)\n//             .children(\"td\")\n//             .eq(j)\n//             .remove();\n//         }\n//         $(row)\n//           .children(\"td\")\n//           .eq(33)\n//           .remove(); ////IMPROVEMENT VALUE\n//         $(row)\n//           .children(\"td\")\n//           .eq(32)\n//           .remove(); ////LAND VALUE\n//         $(row)\n//           .children(\"td\")\n//           .eq(29)\n//           .remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(28)\n//           .remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(27)\n//           .remove();\n//         //$(row).children('td').eq(26).remove(); ////KEEP THE AGE\n//         $(row)\n//           .children(\"td\")\n//           .eq(24)\n//           .remove();\n//         //$(row).children('td').eq(19).remove(); //Days On Market\n//         $(row)\n//           .children(\"td\")\n//           .eq(18)\n//           .remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(17)\n//           .remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(15)\n//           .remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(14)\n//           .remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(13)\n//           .remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(7)\n//           .remove(); //ML # with Link\n//         $(row)\n//           .children(\"td\")\n//           .eq(6)\n//           .remove(); //Action Icons\n//         $(row)\n//           .children(\"td\")\n//           .eq(5)\n//           .remove(); //Pcitures\n//         $(row)\n//           .children(\"td\")\n//           .eq(4)\n//           .remove(); //Pictures NO\n//         //$(row).children('td').eq(3).remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(2)\n//           .remove(); //Hidden\n//         $(row)\n//           .children(\"td\")\n//           .eq(1)\n//           .remove(); //Hidden\n//       }\n//     }\n//     if (this.tabTitle == \"Residential Detached\") {\n//       for (var i = 0; i < rowsBody.length; i++) {\n//         var row = rowsBody[i];\n//         $(row).height(40);\n//         for (var j = 51; j >= 32; j--) {\n//           $(row)\n//             .children(\"td\")\n//             .eq(j)\n//             .remove();\n//         }\n//         $(row)\n//           .children(\"td\")\n//           .eq(7)\n//           .remove(); //ML # with Link\n//         $(row)\n//           .children(\"td\")\n//           .eq(6)\n//           .remove(); //Action Icons\n//         $(row)\n//           .children(\"td\")\n//           .eq(5)\n//           .remove(); //Pcitures\n//         $(row)\n//           .children(\"td\")\n//           .eq(4)\n//           .remove(); //Pictures NO\n//         //$(row).children('td').eq(3).remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(2)\n//           .remove(); //Hidden\n//         $(row)\n//           .children(\"td\")\n//           .eq(1)\n//           .remove(); //Hidden\n//       }\n//     }\n//     if (this.tabTitle == \"Tour and Open House\") {\n//       for (var i = 0; i < rowsBody.length; i++) {\n//         var row = rowsBody[i];\n//         $(row).height(40);\n//         $(row)\n//           .children(\"td\")\n//           .eq(40)\n//           .remove(); //\n//         $(row)\n//           .children(\"td\")\n//           .eq(39)\n//           .remove(); //Floor Plan Url\n//         $(row)\n//           .children(\"td\")\n//           .eq(38)\n//           .remove();\n//         $(row)\n//           .children(\"td\")\n//           .eq(34)\n//           .remove(); //\n//         $(row)\n//           .children(\"td\")\n//           .eq(28)\n//           .remove(); //Floor Plan Url\n//         $(row)\n//           .children(\"td\")\n//           .eq(27)\n//           .remove(); //Building Plan\n//         $(row)\n//           .children(\"td\")\n//           .eq(20)\n//           .remove(); //ML # with Link\n//         $(row)\n//           .children(\"td\")\n//           .eq(19)\n//           .remove(); //Status\n//         $(row)\n//           .children(\"td\")\n//           .eq(18)\n//           .remove(); //Postal Code\n//         $(row)\n//           .children(\"td\")\n//           .eq(17)\n//           .remove(); //Province\n//         $(row)\n//           .children(\"td\")\n//           .eq(8)\n//           .remove(); //ML # with Link\n//         $(row)\n//           .children(\"td\")\n//           .eq(7)\n//           .remove(); //ML # with Link\n//         $(row)\n//           .children(\"td\")\n//           .eq(6)\n//           .remove(); //Action Icons\n//         $(row)\n//           .children(\"td\")\n//           .eq(5)\n//           .remove(); //Pcitures\n//         $(row)\n//           .children(\"td\")\n//           .eq(4)\n//           .remove(); //Pictures NO\n//         //$(row).children('td').eq(3).remove(); //Keep the records number\n//         $(row)\n//           .children(\"td\")\n//           .eq(2)\n//           .remove(); //Hidden\n//         $(row)\n//           .children(\"td\")\n//           .eq(1)\n//           .remove(); //Hidden\n//       }\n//     }\n//     if (this.tabTitle == \"Market Monitor\" || this.tabTitle == \"Listing Carts\") {\n//       for (var i = 0; i < rowsBody.length; i++) {\n//         var row = rowsBody[i];\n//         if (\n//           !$fx.inGreatVanArea(\n//             $(row)\n//               .children(\"td\")\n//               .eq(32)\n//               .text()\n//           )\n//         ) {\n//           $(row).remove();\n//         } else {\n//           $(row).height(40);\n//           // for(var j=72; j>=41; j--){\n//           //     $(row).children('td').eq(j).remove();\n//           // }\n//           $(row)\n//             .children(\"td\")\n//             .eq(33)\n//             .remove(); ////LAST CELL FOR CSS CLASS\n//           // $(row).children('td').eq(32).remove();////LAND VALUE\n//           $(row)\n//             .children(\"td\")\n//             .eq(29)\n//             .remove();\n//           $(row)\n//             .children(\"td\")\n//             .eq(28)\n//             .remove();\n//           //$(row).children('td').eq(27).remove(); ////KEEP THE LOT SIZE\n//           //$(row).children('td').eq(26).remove(); ////KEEP THE AGE\n//           $(row)\n//             .children(\"td\")\n//             .eq(24)\n//             .remove();\n//           //$(row).children('td').eq(19).remove(); //Days On Market\n//           //$(row).children('td').eq(18).remove(); ////KEEP THE YEAR BUILT\n//           $(row)\n//             .children(\"td\")\n//             .eq(17)\n//             .remove();\n//           $(row)\n//             .children(\"td\")\n//             .eq(15)\n//             .remove();\n//           $(row)\n//             .children(\"td\")\n//             .eq(14)\n//             .remove();\n//           $(row)\n//             .children(\"td\")\n//             .eq(13)\n//             .remove();\n//           $(row)\n//             .children(\"td\")\n//             .eq(7)\n//             .remove(); //ML # with Link\n//           $(row)\n//             .children(\"td\")\n//             .eq(6)\n//             .remove(); //Action Icons\n//           $(row)\n//             .children(\"td\")\n//             .eq(5)\n//             .remove(); //Pcitures\n//           $(row)\n//             .children(\"td\")\n//             .eq(4)\n//             .remove(); //Pictures NO\n//           //$(row).children('td').eq(3).remove();\n//           $(row)\n//             .children(\"td\")\n//             .eq(2)\n//             .remove(); //Hidden\n//           $(row)\n//             .children(\"td\")\n//             .eq(1)\n//             .remove(); //Hidden\n//         }\n//       }\n//     }\n//     cloneTable.appendTo($(htmlTable));\n//     var tableToExcel = (function() {\n//       var uri = \"data:application/vnd.ms-excel;base64,\",\n//         template =\n//           '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>',\n//         base64 = function(s) {\n//           return window.btoa(unescape(encodeURIComponent(s)));\n//         },\n//         format = function(s, c) {\n//           return s.replace(/{(\\w+)}/g, function(m, p) {\n//             return c[p];\n//           });\n//         };\n//       return function(table, name) {\n//         if (!table.nodeType) table = document.querySelector(table); //document.getElementById(table)\n//         var ctx = { worksheet: name || \"Worksheet\", table: table.innerHTML };\n//         window.location.href = uri + base64(format(template, ctx));\n//       };\n//     })();\n//     tableToExcel(\"#newClonedTable\", \"Listings Table\");\n//     cloneTable.remove();\n//   }\n//   saveComplexInfo(tabTitle) {\n//     ////MANUALLY SAVE OR UPDATE COMPLEX NAME TO THE DATABASE\n//     ////RECORD NO HAS TO BE LOOK UP THE CHECKED ONE IN THE TABLE\n//     var self = this;\n//     var cols = $fx.setCols(tabTitle);\n//     var complexName = self.complex.val();\n//     complexName = $fx.normalizeComplexName(complexName); ////NORMALIZED THE COMPLEX NAME\n//     if (complexName.length == 0) {\n//       console.warn(\"NOT INPUT A VALID COMPLEX NAME\");\n//       return;\n//     }\n//     ////SEARCH CHECKED RECORD NO\n//     var recordNo = 0;\n//     var recordRow_i = null;\n//     var strataPlan_i = \"\";\n//     var streetAddress_i = \"\";\n//     var cells_i = null;\n//     var complexCell_i = null;\n//     var recordNo_i = 0;\n//     var recordCheckbox_i = null;\n//     var htmlTable = document.querySelector(\"#grid\");\n//     var recordRows = $(htmlTable)\n//       .children()\n//       .find(\"tr\");\n//     for (var i = 1; i < recordRows.length; i++) {\n//       recordRow_i = $(recordRows[i]); ////LOOP ALL THE ROWS IN THE TABLE\n//       cells_i = recordRow_i.children();\n//       recordNo_i = cells_i[cols.RecordNo];\n//       recordCheckbox_i = $(cells_i[1]).children('input[type=\"checkbox\"]'); ////HARDWIRED THE COL NO 1 TO THE CHECKBOX COLUMN\n//       if ($(recordCheckbox_i).prop(\"checked\") == true) {\n//         recordNo = recordNo_i.textContent;\n//         break;\n//       }\n//     }\n//     if (recordNo == 0) {\n//       console.warn(\"No Record Selected!\");\n//       return;\n//     }\n//     ////UPDATE THE COMPLEX NAME IN THE SPREAD SHEET\n//     var recordRow = $(recordRows[recordNo]); ////FETCH THE SELECTED ROW AND ITS CELLS\n//     var cells = recordRow.children();\n//     var strataPlan = cells[cols.strataPlan].textContent;\n//     var streetAddress = cells[cols.streetAddress].textContent;\n//     for (var i = 1; i < recordRows.length; i++) {\n//       recordRow_i = $(recordRows[i]); ////LOOP ALL THE ROWS IN THE TABLE\n//       cells_i = recordRow_i.children();\n//       recordNo_i = cells_i[cols.RecordNo];\n//       recordCheckbox_i = $(cells_i[2])\n//         .children()\n//         .find('input[type=\"checkbox'); ////HARDWIRED THE COL NO 2 TO THE CHECKBOX COLUMN\n//       complexCell_i = cells_i[cols.complexName];\n//       strataPlan_i = cells_i[cols.strataPlan].textContent;\n//       streetAddress_i = cells_i[cols.streetAddress].textContent;\n//       if (strataPlan == strataPlan_i && streetAddress == streetAddress_i) {\n//         complexCell_i.textContent = complexName;\n//       }\n//     }\n//     ////SAVE THE COMPLEX.INFO INTO THE DATABASE\n//     if (complexName.length > 0) {\n//       ////PREPARE THE FIELDS FOR THE COMPLEX.INFO OBJECT\n//       var subArea = cells[cols.subArea].textContent;\n//       var neighborhood = cells[cols.neighborhood].textContent;\n//       var postcode = cells[cols.postcode].textContent;\n//       var houseType = cells[cols.houseType].textContent;\n//       var formalAddress = cells[cols.address].textContent;\n//       var isFormalAddress = true;\n//       var address = new addressInfo(formalAddress, houseType, isFormalAddress);\n//       var strataPlan = cells[cols.strataPlan].textContent;\n//       var totalUnits = 0;\n//       var devUnits = 0;\n//       ////ASSEMBLE THE COMPLEX INFO OBJECT\n//       var complexInfo = {\n//         _id:\n//           strataPlan +\n//           \"-\" +\n//           address.streetNumber +\n//           \"-\" +\n//           address.streetName +\n//           \"-\" +\n//           address.streetType,\n//         name: complexName,\n//         complexName: complexName,\n//         strataPlan: strataPlan,\n//         addDate: $fx.getToday(),\n//         subArea: subArea,\n//         neighborhood: neighborhood,\n//         postcode: postcode,\n//         streetNumber: address.streetNumber,\n//         streetName: address.streetName + \" \" + address.streetType,\n//         dwellingType: houseType,\n//         totalUnits: totalUnits,\n//         devUnits: devUnits,\n//         todo: \"saveComplex\",\n//         from: \"uiSummaryTable\"\n//       };\n//       ////SEND THE COMPLEX NAME INTO THE DATABASE BY CALL ADD.COMPLEX.INFO\n//       chrome.runtime.sendMessage(complexInfo, function(response) {});\n//       ////FEEDBACK THE INPUT AREA WITH ADDED STAR SIGN\n//       this.complex.val(complexName + \"*\");\n//     }\n//   }\n//   ContinueTaxSearch(tableID) {\n//     console.log(\"ContinueTaxSearch\");\n//     this.parent.searchTax();\n//   }\n\n{}\n/* <table cellspacing=\"0\" cellpadding=\"0\" >\r\n          <tbody><tr>\r\n              <td width=\"100%\" align=\"center\">\r\n                  <table cellpadding=\"0\" cellspacing=\"0\">\r\n                      <tbody><tr align=\"right\">\r\n                          <td width=\"100px\">\r\n                              <table cellpadding=\"1\" cellspacing=\"1\" align=\"center\" width=\"100px\">\r\n                                  <tbody><tr>\r\n                                      <td>\r\n                                          &nbsp;\r\n                                      </td>\r\n                                  </tr>\r\n                                  <tr align=\"right\">\r\n                                      <td>\r\n                                          LP/SF:\r\n                                      </td>\r\n                                  </tr>\r\n                                  <tr align=\"right\">\r\n                                      <td>\r\n                                          SP/SF:\r\n                                      </td>\r\n                                  </tr>\r\n                              </tbody></table>\r\n                          </td>\r\n                          <td>\r\n                              <table cellpadding=\"1\" cellspacing=\"1\" align=\"center\" width=\"365px\">\r\n                                  <tbody><tr align=\"center\" style=\"font-weight: bold\">\r\n                                      <td class=\"f-summary-label\">\r\n                                          HIGH\r\n                                      </td>\r\n                                      <td class=\"f-summary-label\">\r\n                                          LOW\r\n                                      </td>\r\n                                      <td class=\"f-summary-label\">\r\n                                          AVERAGE\r\n                                      </td>\r\n                                      <td class=\"f-summary-label\">\r\n                                          MEDIAN\r\n                                      </td>                                        \r\n                                  </tr>\r\n                                  <tr align=\"center\">\r\n                                      <td>\r\n                                          <div id=\"HighAskingPricePSF\" class=\"f-summary-data-box\">\r\n                                              $0\r\n                                          </div>\r\n                                      </td>\r\n                                      <td>\r\n                                          <div id=\"LowAskingPricePSF\" class=\"f-summary-data-box\">\r\n                                              $0\r\n                                          </div>\r\n                                      </td>\r\n                                      <td>\r\n                                          <div id=\"AverageAskingPricePSF\" class=\"f-summary-data-box\">\r\n                                              $0\r\n                                          </div>\r\n                                      </td>\r\n                                      <td>\r\n                                          <div id=\"MedianAskingPricePSF\" class=\"f-summary-data-box\">\r\n                                              $0\r\n                                          </div>\r\n                                      </td>                                        \r\n                                   </tr>\r\n                                  <tr align=\"center\">\r\n                                      <td>\r\n                                          <div id=\"HighSoldPricePSF\" class=\"f-summary-data-box\">\r\n                                              $0\r\n                                          </div>\r\n                                      </td>\r\n                                      <td>\r\n                                          <div id=\"LowSoldPricePSF\" class=\"f-summary-data-box\">\r\n                                              $0\r\n                                          </div>\r\n                                      </td>\r\n                                      <td>\r\n                                          <div id=\"AverageSoldPricePSF\" class=\"f-summary-data-box\">\r\n                                              $0\r\n                                          </div>\r\n                                      </td>\r\n                                      <td>\r\n                                          <div id=\"MedianSoldPrice\" class=\"f-summary-data-box\">\r\n                                              $0\r\n                                          </div>\r\n                                      </td>                                        \r\n                                  </tr>\r\n                              </tbody></table>\r\n                          </td>\r\n                      </tr>\r\n                  </tbody></table>\r\n              </td>\r\n          </tr>\r\n      </tbody></table> */\n//   setHighListedSFP(x) {\n//     // $(this.$UITable)\n//     //   .find(\"#HighAskingPricePSF\")\n//     //   .text(\"$\" + x);\n//     this.state.panels[1].values.high = x;\n//   }\n//   setHighSoldSFP(x) {\n//     // $(this.$UITable)\n//     //   .find(\"#HighSoldPricePSF\")\n//     //   .text(\"$\" + x);\n//     this.state.panels[2].values.high = x;\n//   }\n//   setLowListedSFP(x) {\n//     $(this.$UITable)\n//       .find(\"#LowAskingPricePSF\")\n//       .text(\"$\" + x);\n//   }\n//   setLowSoldSFP(x) {\n//     $(this.$UITable)\n//       .find(\"#LowSoldPricePSF\")\n//       .text(\"$\" + x);\n//   }\n//   setAvgListedSFP(x) {\n//     $(this.$UITable)\n//       .find(\"#AverageAskingPricePSF\")\n//       .text(\"$\" + x);\n//   }\n//   setAvgSoldSFP(x) {\n//     $(this.$UITable)\n//       .find(\"#AverageSoldPricePSF\")\n//       .text(\"$\" + x);\n//   }\n//   setMedianListedSFP(x) {\n//     $(this.$UITable)\n//       .find(\"#MedianAskingPricePSF\")\n//       .text(\"$\" + x);\n//   }\n//   setMedianSoldSFP(x) {\n//     $(this.$UITable)\n//       .find(\"#MedianSoldPrice\")\n//       .text(\"$\" + x);\n//   }\n\n//# sourceURL=webpack:///./app/assets/scripts/ui/uiSummaryTable.js?");

/***/ }),

/***/ "./app/content/SpreadSheetCompletion.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _assets_scripts_ui_uiSummaryTable_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./app/assets/scripts/ui/uiSummaryTable.js\");\n/* harmony import */ var _assets_scripts_modules_AddressInfoExport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./app/assets/scripts/modules/AddressInfoExport.js\");\n/* harmony import */ var _assets_scripts_modules_Assessment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./app/assets/scripts/modules/Assessment.js\");\n/* harmony import */ var _assets_scripts_modules_Complex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./app/assets/scripts/modules/Complex.js\");\n\n\n\n////CONTENT.SCRIPT TARGET PARAGON.MLS.DEFAULT.SPREADSHEET.VIEW.PAGE\n////COMPLETE THE INFORMATION IN THE SPREADSHEET.TABLE BY ADDING BCA.TAX.INFORMATION\n////LOOK FOR COMPLEX.NAME, LAND.TAX.VALUE, IMPROVEMENT.TAX.VALUE, TOTAL.TAX.VALUE\n////COMPUTE PRICE.CHANGE.PERCENTAGE VS TOTAL.TAX.VALUE\n////ADD STRATA.PLAN.COLUMN\n////NORMALIZE CIVIC.ADDRESS, COMPLEX.NAME\n//Residential Attached, Detached & Land Listing Search Results Page (Tab3/4/5_?_2),\n//Target: SubPage iframe #ifSpreadsheet : Listing Results Spreadsheet Table\n//Function: Computing Square Feet Price Summary From the Spreadsheet Table\n\n // import test from \"./modules/test.js\";\n//import * as math from \"../assets/lib/mathjs/math.min.js\";\n// import Assess from \"./modules/Assessment\";\n// import Complex from \"./modules/Complex\";\n\n\n\nvar $fx = L$(); //// add library module\n\nvar computeSFPrices = {\n  init: function init() {\n    console.log(\"Spreadsheet Document URL: \", document.URL); ////THIS URL CONTAINS TAB.ID\n\n    this.tabID = $fx.getTabID(document.URL); ////LOOK FOR TAB.ID PREFIXED WITH # ID.SIGN\n\n    this.searchTabID = $fx.getSearchTabID(document.URL);\n    this.tabNo = parseInt(this.tabID.replace(\"#tab\", \"\")); ////LOOK FOR TAB.NO\n\n    var x = $(\"ul#tab-bg\", top.document); ////find the top tab panel\n\n    var y = x.children(\"li\")[this.tabNo];\n    this.tabTitle = $(y).children().find(\"span\").text().trim(); ////LOOK FOR TAB.TITLE\n\n    console.warn(\"tabID, tabNo, tabTitle\", this.tabID, this.tabNo, this.tabTitle); //this.setCols(this.tabTitle); ////COLUMNS FROM DIFFERENT SPREADSHEET.TABLES\n\n    this.cols = $fx.setCols(this.tabTitle);\n    this.uiTable.tabTitle = this.tabTitle; ////SUMMARY.TABLE FOR AVERAGE SQUARE.FEET.PRICES\n    ////BC.TAX.SEARCH IS SET TO TAB1, ITS SEARCH.RESULT ALSO USE SPREADSHEET.VIEW, SHOULD NOT BE INCLUDED HERE\n\n    if (this.tabID >= \"#tab2\") {\n      ////EXCLUDE #TAB1: BC.TAX.SEARCH.RESULTS\n      this.addLock(this.tabID);\n      this.$tabContentContainer = $(\"div\" + this.tabID, top.document); // this.$LoadSubject = $(\"#SubjectPropertySubmit\", top.document);\n\n      this.$spreadSheet = $(\"#ifSpreadsheet\");\n      this.$searchCount = $(\"#SearchCount\", parent.document);\n      this.$grid = $(\"#grid\");\n      this.recordCount = $fx.getRecordCount(parent.document.URL); ////RECORD.COUNT IS EMBEDDED IN THE URL FOR MANY IFRAME PAGES\n\n      if (this.recordCount == 0) {\n        this.recordCount = parseInt(this.$searchCount.text()); ////SAME RECORD.COUNT SHOWS IN THE TOP.SECTION\n      }\n\n      console.log(\"[SPREADSHEET] Record Count: \", this.recordCount); //// Load Active Subject Properties\n      // this.$LoadSubject.click();\n      // if not the correct table, skip all events\n\n      var searchViewName = $(this.tabID, top.document).find(\"[rel='\" + this.searchTabID + \"']\").text(); // Update WP View :: update community and neighborhood to wordpress\n      // Listing Extra Info:: get bca, complex... extra info\n\n      var listingExtraInfo = \"Listing Extra Info\";\n      var updateWPViewName = \"Update WP View\";\n\n      if (searchViewName.indexOf(listingExtraInfo) > -1) {\n        ////HOOK UP EVENTS:\n        this.onTaxSearch(); ////TAX.SEARCH EVENT\n        // this.onConnect(); ///long live port\n\n        this.onMutation(); ////SPREADSHEET.TABLE READY EVENT\n\n        this.onComplexSearch(); ////COMPLEX.NAME.SEARCH EVENT\n      } else {\n        this.onMutation_Only_for_SummaryUi();\n      }\n    } else {\n      console.warn(\"THIS MODULE DOES NOT APPLY TO THIS TAB.ID: \", this.tabID, \"TAB.TITLE: \", this.tabTitle);\n    }\n\n    this.uiTable.parent = this;\n  },\n  ////PROPERTIES:\n  tabID: null,\n  tabNo: 0,\n  tabTitle: null,\n  uiTable: new _assets_scripts_ui_uiSummaryTable_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](undefined),\n  $spreadSheet: null,\n  $searchCount: null,\n  $grid: null,\n  $mutationObserver: null,\n  recordCount: 0,\n  //recordPointer: 0,\n  table: [],\n  //for assessment search\n  assessInfos: [],\n  //for assess search\n  rowNumber: [],\n  //for table col 0 , keep the listing row number of spreadsheet\n  complexInfos: [],\n  //for complexName search\n  cols: null,\n  keyword: $(\"div#app_banner_links_left input.select2-search__field\", top.document),\n  stopSearch: $(\"input#inputstopsearch\", top.document),\n  ////EVENTS:\n  // onConnect() {\n  //   // chrome.runtime.onConnect.addListener(function(port) {\n  //   //   port.onMessage.addListener(function(msg) {\n  //   //     console.info(\"msg\", msg.counter);\n  //   //     port.postMessage({ counter: msg.counter + 1 });\n  //   //   });\n  //   // });\n  // },\n  onMutation: function onMutation() {\n    ////AFTER THE SPREADSHEET.TABLE HAS BEEN FULLY LOADED TO THE FRONT.END\n    ////POPULATE this.table AND this.complexInfos\n    var self = this;\n    var tableLoading = document.querySelector(\"#grid tbody\"); ////MONITOR THE #grid.tbody, CHECK THE LISTING RECORDS\n\n    var $mutationObserver = new MutationObserver(function (mutations) {\n      mutations.forEach(function (mutation) {\n        var x = $(\"table#grid tbody\"); //Spreadsheet table body\n\n        var y = $(\"table.ui-jqgrid-htable thead\"); //Spreadsheet Table header\n\n        var rows = x.children(\"tr\");\n        var tableHeaderRow = y.children(\"tr\");\n        var name = mutation.attributeName;\n        var value = mutation.target.getAttribute(name);\n\n        if (mutation.type == \"childList\" && mutation.target.tagName == \"TBODY\") {\n          if (mutation.addedNodes.length != rows.length - 1) {\n            return;\n          } else {\n            self.recordCount = mutation.addedNodes.length;\n          }\n        } else {\n          return;\n        }\n\n        self.table.length = 0; ////INIT THIS.table\n\n        self.rowNumber.length = 0; ////INIT THIS.rowNumber\n\n        if (x.children(\"tr\").length - 1 == self.recordCount || x.children(\"tr\").length - 1 == 250) {\n          ////THE TABLE #grid HAS BEEN FULLY LOADED TO THE FRONT.ENT\n          //console.log(\"reach the bottom of the TABLE\");\n          self.recordCount = parseInt(self.$searchCount.text());\n          console.log(\"Table Rows currently is: \", x.children(\"tr\").length, \"RecordCount: \", self.recordCount);\n          var x0 = $(\"div#dialogStats\", parent.document); ////LOOK FOR THE SUMMARY.SECTION FOR ADDING EXTRA THIS.uiTable\n\n          self.uiTable.showUI(x0);\n          self.table.length = 0;\n          self.assessInfos.length = 0; // clear the assessInfo container\n\n          var i;\n          var row = []; //current row\n          // var complexInfo = {}; //complex info json object\n\n          var col14_Price = []; //List Price\n\n          var col22_FloorArea = []; //FloorArea\n\n          var col23_ActivePricePSF = []; //Listed / asking Price per SqFt\n\n          var col24_SoldPricePSF = []; //Sold Price Per SqFt\n\n          var col31_PID = []; //PID Column\n\n          var col32_LandValue = []; //Land Value Colum\n\n          var col33_ImprovementValue = []; // Improvement Value\n\n          var col34_TotalAssess = []; // Total Assessment Value\n\n          var col35_ValueChange = []; // Computed column for total value change percentage\n\n          var col36_PlanNum = []; // Strata Plan Number\n\n          var col_LotSize = []; // lot size in square feet\n\n          var listPricePSF = []; //for listPrice Per Square Feet\n\n          var sumPSFListedPrice = 0;\n          var sumPSFActivePrice = 0; //keep the sum of listing price per sf\n\n          var sumPSFSoldPrice = 0; //keep the sum of sold price per sf\n\n          var countSoldListing = 0; //keep the count of sold listings\n\n          var countActiveListing = 0; ////KEEP THE COUNT OF ACTIVE LISTINGS\n\n          var soldPricePSF; //keep the sold price per square feet\n\n          var listingPricePSF; //keep the listing price per square feet\n\n          var strataFeePSF; ////KEEP THE CALCULATED STRATA FEE PER SQUARE FEET\n\n          var status; ////KEEP THE LISTING STATUS\n\n          i = 0; ////modify the table header\n\n          var headerCells = $(tableHeaderRow[0]).children(\"th\");\n\n          for (var j = 0; j <= headerCells.length; j++) {\n            switch (j) {\n              case self.cols.LandValue:\n                $(headerCells[j]).children(\"div\").text(\"landValue\");\n                break;\n\n              case self.cols.ImprovementValue:\n                $(headerCells[j]).children(\"div\").text(\"imprvValue\");\n                break;\n\n              case self.cols.TotalValue:\n                $(headerCells[j]).children(\"div\").text(\"totalValue\");\n                break;\n\n              case self.cols.ChangeValuePercent:\n                $(headerCells[j]).children(\"div\").text(\"change%\");\n                break;\n\n              case self.cols.StrataPlan:\n                $(headerCells[j]).children(\"div\").text(\"strataPlan\");\n                break;\n\n              case self.cols.StreetAddress:\n                $(headerCells[j]).children(\"div\").text(\"streetAddress\");\n                break;\n\n              case self.cols.UnitNo:\n                $(headerCells[j]).children(\"div\").text(\"Unit#\");\n                break;\n\n              case self.cols.StrataFeePSF:\n                $(headerCells[j]).children(\"div\").text(\"StrFeePSF\");\n                break;\n            }\n          }\n\n          for (i = 1; i < rows.length; i++) {\n            row.push(i); ////COL 0: ROW.NO\n\n            status = $(rows[i]).children(\"td\")[self.cols.Status].textContent;\n            var price = $fx.convertStringToDecimal($(rows[i]).children(\"td\")[self.cols.Price].textContent);\n            col14_Price.push(price);\n            row.push(price); ////COL 1: PRICE\n\n            var floorArea = $fx.convertStringToDecimal($(rows[i]).children(\"td\")[self.cols.TotalFloorArea].textContent);\n            col22_FloorArea.push(floorArea);\n            row.push(floorArea); ////COL 2: FLOOR.AREA\n\n            if (self.tabTitle == \"Residential Attached\") {\n              var lotSize = $fx.convertStringToDecimal($(rows[i]).children(\"td\")[self.cols.LotSize].textContent);\n            } else {\n              var lotSize = $fx.convertStringToDecimal($(rows[i]).children(\"td\")[self.cols.LotSize].textContent);\n            }\n\n            col_LotSize.push(lotSize);\n            listingPricePSF = Number(Number(col14_Price[col14_Price.length - 1] / col22_FloorArea[col22_FloorArea.length - 1]).toFixed(2));\n            sumPSFListedPrice += listingPricePSF;\n            listPricePSF.push(listingPricePSF);\n            row.push(listingPricePSF); ////COL 3: LISTING.ASKING.PRICE.PER.SQUARE.FEET?????????????????????\n            ////ACTIVE LISTING VS SOLD LISTING\n\n            switch (status) {\n              case \"A\":\n                ////Added Status Control: Only Select Active Listing for ListingPrice\n                var activePricePSF = $fx.convertStringToDecimal($(rows[i]).children(\"td\")[self.cols.PricePSF].textContent, true);\n\n                if (activePricePSF > 0) {\n                  countActiveListing++;\n                  col23_ActivePricePSF.push(activePricePSF);\n                  sumPSFActivePrice += activePricePSF;\n                }\n\n                break;\n\n              case \"S\":\n                soldPricePSF = $fx.convertStringToDecimal($(rows[i]).children(\"td\")[self.cols.SoldPricePSF].textContent);\n\n                if (soldPricePSF > 0) {\n                  countSoldListing++;\n                  col24_SoldPricePSF.push(soldPricePSF); ////SOLD.PRICE.PER.SQUARE.FEET\n\n                  sumPSFSoldPrice += soldPricePSF; ////TOTAL.SOLD.PRICE.PER.SQUARE.FEET\n                }\n\n                break;\n            } ////LOOK FOR PID FOR TAX.SEARCH\n            //self.recordPointer = i-1;\n\n\n            var pid = $(rows[i]).children(\"td\")[self.cols.PID].textContent;\n            var complexName = $(rows[i]).children(\"td\")[self.cols.ComplexName].textContent;\n            var address = $(rows[i]).children(\"td\")[self.cols.Address].textContent;\n            var houseType = $(rows[i]).children(\"td\")[self.cols.HouseType].textContent;\n            var streetAddress = $(rows[i]).children(\"td\")[self.cols.Address].textContent;\n            var unitNo = \"\";\n            var city = \"\";\n            col31_PID.push(pid);\n            row.push(pid); ////COL 4: PID\n\n            col32_LandValue.push(0);\n            row.push(0); ////COL 5: LAND.VALUE\n\n            col33_ImprovementValue.push(0);\n            row.push(0); ////COL 6: IMPROVEMENT.VALUE\n\n            col34_TotalAssess.push(0);\n            row.push(0); ////COL 7: TOTAL.ASSESS\n\n            col35_ValueChange.push(0);\n            row.push(0); ////COL8: VALUE.CHANGE\n\n            col36_PlanNum.push(\"\");\n            row.push(\"\"); ////COL9: PLAN.NUM\n\n            row.push(false); //col 10 : taxSearch Sign\n\n            row.push(lotSize); // col 11 : add lotSize for single house or land\n\n            row.push(complexName); //col 12: for complex Name\n\n            row.push(address); //col 13: for address\n\n            row.push(houseType); //col 14: for houseType\n\n            row.push(false); //col 15: complexSearch Sign\n\n            row.push(\"\"); //col 16: placeholder for complexID\n\n            row.push(streetAddress); ////COL 17: STREET ADDRESS\n\n            row.push(unitNo); ////  COL 18: UNIT NO FOR STRATA UNIT\n\n            city = $(rows[i]).children(\"td\")[self.cols.City].textContent;\n            row.push(city); //// COL 19: CITY OF GREAT VANCOUVER\n\n            row.push(status); ////COL 20: LISTING STATUS\n\n            var strataFee = $(rows[i]).children(\"td\")[self.cols.StrataFee].textContent;\n            strataFee = $fx.convertStringToDecimal(strataFee, true);\n\n            try {\n              strataFeePSF = Number(strataFee / floorArea).toFixed(2);\n            } catch (e) {\n              strataFeePSF = 0;\n            }\n\n            row.push(strataFeePSF); ////COL 21: STRATA FEE PER SQUARE FEET\n\n            console.info(\"row::\", row);\n            self.table.push(row); ////ADD THE ROW TO THE TABLE\n\n            row = []; ////INIT THE ROW\n          } // var avgListedSFP = (sumPSFListedPrice / self.recordCount).toFixed(0);\n          // var avgSoldSFP = (sumPSFSoldPrice / countSoldListing).toFixed(0);\n\n\n          self.uiTable.setSumValues(\n          /*id for panel 1*/\n          1, col23_ActivePricePSF, countActiveListing, \"$\");\n          self.uiTable.setSumValues(\n          /*id for panel 2*/\n          2, col24_SoldPricePSF, countSoldListing, \"$\");\n          self.uiTable.render(1);\n\n          for (var i = 0; i < self.table.length; i++) {\n            if (!$fx.inGreatVanArea(self.table[i][19])) {\n              ////IF IS NOT GREAT VAN CITIES, PASSED TAX SEARCH\n              console.log(\"[SP]==>BYPASS THE NON GV CITIES!\", i);\n              $(rows[i + 1]).children(\"td\")[self.cols.Address].textContent += \"^\";\n              self.table[i][10] = true;\n              self.table[i][15] = true;\n              continue;\n            }\n          }\n\n          self.searchTax(); // self.searchTax_New();\n        }\n      });\n    });\n    $mutationObserver.observe(tableLoading, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: false,\n      attributeOldValue: true,\n      characterDataOldValue: true\n    });\n  },\n  onMutation_Only_for_SummaryUi: function onMutation_Only_for_SummaryUi() {\n    var self = this;\n    var tableLoading = document.querySelector(\"#grid tbody\"); ////MONITOR THE #grid.tbody, CHECK THE LISTING RECORDS\n\n    var $mutationObserver = new MutationObserver(function (mutations) {\n      mutations.forEach(function (mutation) {\n        var x = $(\"table#grid tbody\"); //Spreadsheet table body\n\n        var y = $(\"table.ui-jqgrid-htable thead\"); //Spreadsheet Table header\n\n        var rows = x.children(\"tr\");\n        var tableHeaderRow = y.children(\"tr\");\n        var name = mutation.attributeName;\n        var value = mutation.target.getAttribute(name);\n\n        if (mutation.type == \"childList\" && mutation.target.tagName == \"TBODY\") {\n          if (mutation.addedNodes.length != rows.length - 1) {\n            return;\n          } else {\n            self.recordCount = mutation.addedNodes.length;\n          }\n        } else {\n          return;\n        }\n\n        self.table.length = 0; ////INIT THIS.table\n\n        self.rowNumber.length = 0; ////INIT THIS.rowNumber\n\n        if (x.children(\"tr\").length - 1 == self.recordCount || x.children(\"tr\").length - 1 == 250) {\n          self.recordCount = parseInt(self.$searchCount.text());\n          console.log(\"Table Rows currently is: \", x.children(\"tr\").length, \"RecordCount: \", self.recordCount);\n          var x0 = $(\"div#dialogStats\", parent.document); ////LOOK FOR THE SUMMARY.SECTION FOR ADDING EXTRA THIS.uiTable\n\n          self.uiTable.showUI(x0);\n          self.table.length = 0;\n        }\n      });\n    });\n    $mutationObserver.observe(tableLoading, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: false,\n      attributeOldValue: true,\n      characterDataOldValue: true\n    });\n  },\n  //////////////////////////////////////////////////////////////////////////////\n  ///////////////////          Assessment Search Code              /////////////\n  //////////////////////////////////////////////////////////////////////////////\n  onTaxSearch_old: function onTaxSearch_old() {\n    ////DEFINE THE TAX.SEARCH EVENT\n    (function onEvents(self) {\n      chrome.storage.onChanged.addListener(function (changes, area) {\n        if (self.$spreadSheet.css(\"display\") == \"none\") {\n          return;\n        }\n\n        if (area == \"local\" && \"from\" in changes) {\n          if (changes.from.newValue.indexOf(\"assess\") > -1 && changes.from.newValue.indexOf(\"ForSpreadSheet\") > -1) {\n            console.log(\"==>Spreadsheet - TAX SEARCH EVENT: \", changes.from.newValue);\n\n            if (changes.from.newValue.indexOf(\"-TaxSearchFailed\") > -1) {\n              self.updateAssessWhenTaxSearchFailed();\n            } else {\n              self.updateAssess();\n            }\n\n            if (!self.stopSearch.is(\":checked\")) {\n              setTimeout(function () {\n                ////LOOP THE TAX.SEARCH IN THE SPREADSHEET.TABLE\n                this.searchTax();\n              }.bind(self), 1000);\n            }\n          }\n        }\n      });\n    })(this);\n  },\n  onTaxSearch: function onTaxSearch() {\n    ////DEFINE THE TAX.SEARCH EVENT\n    (function onEvents(self) {\n      chrome.storage.onChanged.addListener(function (changes, area) {\n        if (self.$spreadSheet.css(\"display\") == \"none\") {\n          return;\n        }\n\n        if (area == \"local\" && \"from\" in changes) {\n          if (changes.from.newValue.indexOf(\"assess\") > -1 && changes.from.newValue.indexOf(\"ForSpreadSheet\") > -1) {\n            console.log(\"==>Spreadsheet - TAX SEARCH EVENT: \", changes.from.newValue);\n\n            if (changes.from.newValue.indexOf(\"-TaxSearchFailed\") > -1) {\n              self.updateAssessWhenTaxSearchFailed();\n            } else {\n              self.updateAssess();\n            }\n\n            if (!self.stopSearch.is(\":checked\")) {\n              setTimeout(function () {\n                ////LOOP THE TAX.SEARCH IN THE SPREADSHEET.TABLE\n                this.searchTax(); // this.searchTax_New();\n              }.bind(self), 50);\n            }\n          }\n        }\n      });\n    })(this);\n  },\n  searchTax: function searchTax() {\n    ////SEARCH PROPERTY.TAX BY PID THRU BC.TAX.SEARCH #TAB1\n    var self = this;\n    var i = 0;\n    var unTaxed = 0;\n\n    for (i = 0; i < self.table.length; i++) {\n      if (!self.table[i][10]) {\n        ////FETCH A TABLE.ROW HAS NOT YET DONE TAX SEARCH\n        unTaxed = i;\n        var pid = self.table[unTaxed][4];\n        var c = \"\";\n        var newPID = \"\"; ////STANDARDIZE PID, ONLY KEEP NUMBERS AND DASH CHARACTER\n\n        for (var n = 0; n < pid.length; n++) {\n          c = pid[n];\n\n          if (c == \"-\") {\n            newPID += c;\n            continue;\n          }\n\n          if (parseInt(c) >= 0 && parseInt(c) <= 9) {\n            newPID += c;\n          }\n        }\n\n        pid = newPID;\n\n        if (!pid) {\n          return;\n        } ////SEND TAX SEARCH COMMAND TO BACKGROUND SCRIPT\n\n\n        chrome.storage.local.set({\n          PID: pid\n        });\n        chrome.storage.local.get(\"PID\", function (result) {\n          //console.log(\">>>PID saved for tax search: \", result.PID);\n          //////////////////////////////////////////////////////////\n          //SEND OUT SEARCH TAX COMMAND\n          chrome.runtime.sendMessage({\n            from: \"SpreadSheet\",\n            todo: \"taxSearch\"\n          }, function (response) {\n            console.log(\"SpreadSheet got tax response:\", response);\n            self.table[unTaxed][10] = true; ////SET UP THE ROW.SEARCHED TO TRUE\n          });\n        });\n        break;\n      }\n\n      if (i == self.table.length - 1) {\n        console.log(\"taxSearch done!\"); ////START TO SEARCH COMPLEX.NAME\n\n        this.updateSpreadsheet(); ////UPDATE THE STATS\n\n        var i = 0;\n\n        for (i = 0; i < self.table.length; i++) {\n          var planNum = self.table[i][9];\n\n          if (!planNum.trim()) {\n            self.table[i][15] = true; ////BECAUSE OF PLAN.NUMBER ERROR, PASSED THIS RECORD\n          }\n        }\n\n        self.searchComplex(); //FIRST Complex Search\n      }\n    }\n  },\n  updateAssess: function updateAssess() {\n    ////ON TAX.SEARCH EVENT, CHROME.STORAGE GET A NEW.VALUE CONTAINS 'assess' AND 'ForSpreadSheet'\n    var self = this;\n    var aInfo = null;\n    chrome.storage.local.get([\"PID\", \"totalValue\", \"improvementValue\", \"landValue\", \"lotSize\", \"address\", \"bcaDataUpdateDate\", \"bcaDescription\", \"planNum\", \"taxYear\", \"taxRollNumber\", \"legal\", \"grossTaxes\", \"dataFromDB\"], function (result) {\n      var pid = result.PID;\n      var totalValue = result.totalValue;\n      var improvementValue = result.improvementValue;\n      var landValue = result.landValue;\n      var lotSize = result.lotSize;\n      var planNum = result.planNum;\n      var taxYear = result.taxYear;\n      var bcaDataUpdateDate = result.bcaDataUpdateDate;\n      var bcaDescription = result.bcaDescription;\n      var taxRollNumber = result.taxRollNumber;\n      var grossTaxes = result.grossTaxes;\n      var legal = result.legal;\n      var floorArea = null;\n      var formalAddress = \"\";\n      var isFormalAddress = false;\n\n      if (typeof result.address == \"string\" && result.address.trim().length > 0) {\n        formalAddress = result.address.trim();\n      } else {\n        formalAddress = \"\";\n      }\n\n      var houseType = null;\n      var intTotalValue = $fx.convertStringToDecimal(totalValue);\n      var i = 0;\n      var price = 0;\n      var rowNumber = self.rowNumber;\n\n      for (i = 0; i < self.table.length; i++) {\n        var checkPID = self.table[i][4];\n        var c = \"\";\n        var newPID = \"\"; // create assess object\n\n        var assessInfo = {\n          landValue: null,\n          improvementValue: null,\n          assessID: null,\n          totalValue: null,\n          pid: null,\n          taxYear: null,\n          address: null,\n          legal: null,\n          taxRollNumber: null,\n          grossTaxes: null,\n          planNum: null,\n          houseType: null,\n          lotSize: null,\n          bcaDataUpdateDate: null,\n          bcaDescription: null,\n          floorArea: null,\n          bcaFloorArea: null\n        }; //only keep numbers and dash character\n\n        for (var n = 0; n < checkPID.length; n++) {\n          c = checkPID[n];\n\n          if (c == \"-\") {\n            newPID += c;\n            continue;\n          }\n\n          if (parseInt(c) >= 0 && parseInt(c) <= 9) {\n            newPID += c;\n          }\n        }\n\n        if (pid == newPID) {\n          self.table[i][5] = landValue;\n          self.table[i][6] = improvementValue;\n          self.table[i][7] = totalValue;\n          self.table[i][9] = planNum;\n          self.table[i][10] = true; ////TOGGLE THE ROW'S TAX.SEARCH.SING TO TRUE: TAX.SEARCH.DONE\n\n          if (typeof formalAddress == \"string\" && formalAddress.trim().length > 0) {\n            self.table[i][13] = formalAddress; ////SET FORMAL ADDRESS TO THE ONE FROM TAX SEARCH\n\n            isFormalAddress = true;\n          } else {\n            self.table[i][13] = self.table[i][13].trim();\n            isFormalAddress = false;\n          }\n\n          var tempAddress = self.table[i][13]; ////SET TEMP ADDRESS FOR FUNCTION BELOW:\n\n          houseType = self.table[i][14]; //fetch houseType\n\n          aInfo = new _assets_scripts_modules_AddressInfoExport_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](tempAddress, houseType, isFormalAddress);\n          self.table[i][14] = aInfo.houseType;\n          houseType = aInfo.houseType;\n          self.table[i][17] = aInfo.streetAddress;\n          self.table[i][18] = aInfo.UnitNo;\n          self.table[i][16] = planNum + aInfo.addressID; //complexID\n\n          price = parseInt(self.table[i][1]); ////COL 1: PRICE\n\n          floorArea = self.table[i][2]; ////COL 2: FLOOR.AREA\n\n          rowNumber.push(self.table[i][0]);\n\n          if (totalValue != 0) {\n            //calculate the price change percentage\n            var changeValue = price - intTotalValue;\n            var changeValuePercent = (changeValue / intTotalValue * 100).toFixed(0);\n            self.table[i][8] = changeValuePercent;\n          } // fill in assessInfo\n\n\n          assessInfo.landValue = landValue;\n          assessInfo.improvementValue = improvementValue;\n          assessInfo.totalValue = totalValue;\n          assessInfo.planNum = planNum;\n          assessInfo.address = formalAddress;\n          assessInfo.houseType = houseType;\n          assessInfo.lotSize = lotSize;\n          assessInfo.assessID = pid + \"-\" + taxYear;\n          assessInfo.pid = pid;\n          assessInfo.taxYear = taxYear;\n          assessInfo.bcaDataUpdateDate = bcaDataUpdateDate;\n          assessInfo.bcaDescription = bcaDescription;\n          assessInfo.taxRollNumber = taxRollNumber;\n          assessInfo.legal = legal;\n          assessInfo.grossTaxes = grossTaxes;\n          assessInfo.update = true;\n          assessInfo.floorArea = floorArea;\n          self.assessInfos.push(assessInfo);\n          console.log(assessInfo);\n        }\n      }\n\n      console.log(\"SpreadSheet - ASSESS SEARCHing LandValue: \",\n      /*self.table,*/\n      landValue, rowNumber.length, \"/\", i);\n      var x = $(\"table#grid tbody\");\n      var rows = x.children(\"tr\");\n      var rowNo = self.rowNumber[self.rowNumber.length - 1];\n      $($(rows[rowNo]).children(\"td\")[self.cols.Address]).text(self.table[rowNo - 1][13] + \"**\");\n    });\n  },\n  updateAssessWhenTaxSearchFailed: function updateAssessWhenTaxSearchFailed() {\n    ////FOR NO BC.TAX.RECORD\n    ////BC.TAX.RECORD SHOWS TAX.VALUE = 0\n    var self = this;\n    chrome.storage.local.get([\"PID\", \"totalValue\", \"improvementValue\", \"landValue\", \"address\", \"planNum\", \"dataFromDB\"], function (result) {\n      var pid = result.PID;\n      var totalValue = result.totalValue;\n      var improvementValue = result.improvementValue;\n      var landValue = result.landValue;\n      var planNum = result.planNum.trim();\n      var formalAddress = result.address.trim();\n      var houseType = \"\";\n      var aInfo = null;\n      var dataFromDB = result.dataFromDB;\n      var i = 0;\n      var price = 0;\n      var rowNumber = self.rowNumber;\n\n      for (i = 0; i < self.table.length; i++) {\n        if (pid == self.table[i][4]) {\n          self.table[i][5] = landValue;\n          self.table[i][6] = improvementValue;\n          self.table[i][7] = totalValue;\n          self.table[i][9] = planNum;\n          self.table[i][10] = true; // tax done\n\n          houseType = self.table[i][14]; //fetch houseType\n\n          if (planNum) {\n            aInfo = new _assets_scripts_modules_AddressInfoExport_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](formalAddress, houseType, true);\n            self.table[i][16] = planNum + aInfo.addressID; ////complexID\n          } else {\n            //format the address of table col 13:\n            aInfo = new _assets_scripts_modules_AddressInfoExport_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\n            /*address col 13 */\n            self.table[i][13],\n            /*houseType col 14*/\n            self.table[i][14]);\n            formalAddress = aInfo.formalAddress;\n            planNum = \"NPN\"; ////NPN STANDS FOR NO.PLAN.NUMBER\n\n            self.table[i][9] = \"NPN\"; ////UPDATE THE TABLE CELL FOR PLAN.NUMBER\n\n            self.table[i][16] =\n            /*planNum need to get from legalDescription */\n            planNum + aInfo.addressID; //complexID\n          }\n\n          self.table[i][14] = aInfo.houseType;\n          self.table[i][17] = aInfo.streetAddress;\n          self.table[i][18] = aInfo.UnitNo;\n          self.table[i][13] = formalAddress; // formal address from tax search\n\n          price = parseInt(self.table[i][1]);\n          rowNumber.push(self.table[i][0]);\n          var changeValue = 0;\n          var changeValuePercent = 0;\n          self.table[i][8] = changeValuePercent;\n        }\n      }\n\n      console.log(\"SpreadSheet: table & landValue FAILED=> \",\n      /*self.table,*/\n      landValue, rowNumber.length);\n      var x = $(\"table#grid tbody\");\n      var rows = x.children(\"tr\");\n      var rowNo = self.rowNumber[self.rowNumber.length - 1];\n      $($(rows[rowNo]).children(\"td\")[self.cols.Address]).text(self.table[rowNo - 1][13] + \"^\");\n    });\n  },\n  //////////////////////////////////////////////////////////////////////////////\n  ///////////////////             Complex Search Code              /////////////\n  //////////////////////////////////////////////////////////////////////////////\n  onComplexSearch: function onComplexSearch() {\n    (function onEvents(self) {\n      chrome.storage.onChanged.addListener(function (changes, area) {\n        if (self.$spreadSheet.css(\"display\") == \"none\") {\n          return;\n        }\n\n        if (area == \"local\" && \"from\" in changes) {\n          if (changes.from.newValue.indexOf(\"complexInfo\") > -1 && changes.from.newValue.indexOf(\"spreadSheetCompletion\") > -1) {\n            console.log(\"====>Spreadsheet : COMPLEX SEARCH EVENT\", changes);\n            self.updateComplex();\n            setTimeout(function () {\n              //go to next listing for assess date\n              this.searchComplex();\n            }.bind(self), 50);\n          }\n        }\n      });\n    })(this);\n  },\n  searchComplex: function searchComplex() {\n    var self = this;\n    var i = 0;\n    var unSearchComplex = 0;\n    var planNum = \"\";\n    var address = \"\";\n    var complexName = \"\";\n    var houseType = \"\";\n    var complexID = \"\";\n    var x = $(\"table#grid tbody\");\n    var rows = x.children(\"tr\");\n\n    for (i = 0; i < self.table.length; i++) {\n      try {\n        if (!self.table[i][15]) {\n          ////IF NOT YET DONE COMPLEX SEARCH BY CHECKING COMPLEX SEARCH TAG\n          unSearchComplex = i;\n          complexID = self.table[i][16]; ////planNum, address, complex, houseType\n\n          planNum = self.table[i][9];\n          address = self.table[i][13];\n          complexName = $fx.normalizeComplexName(self.table[i][12]);\n          $($(rows[i + 1]).children(\"td\")[self.cols.ComplexName]).text(\"**\" + self.table[i][12]);\n          houseType = self.table[i][14].toUpperCase();\n\n          if (houseType == \"HOUSE\" || houseType == \"DETACHED\") {\n            ////DETACHED PROPERTY NO NEED TO DO COMPLEX SEARCH\n            self.table[i][12] = self.table[i][9];\n            self.table[i][15] = true;\n\n            if (i == self.table.length - 1) {\n              console.log(\"Single House ComplexSearch Done!\");\n              self.updateSpreadsheet(); // self.postAssessInfo(); // post assess to mySQL for detached properties\n\n              var assess = new _assets_scripts_modules_Assessment__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n              assess.postAssessInfos(self.assessInfos, $fx);\n            }\n\n            continue;\n          }\n\n          if (!complexID) {\n            // re do complexID\n            var isFormal = true; // this is formal address from tax search\n\n            var aInfo = new _assets_scripts_modules_AddressInfoExport_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](address, houseType, isFormal); //todo list...\n\n            complexID = planNum + aInfo.addressID;\n          } ////////////////////////////////////////////\n\n\n          var complexInfo = {\n            _id: complexID,\n            name: complexName,\n            todo: \"searchComplexInfo\",\n            from: \"spreadSheetCompletion\"\n          };\n          chrome.runtime.sendMessage(complexInfo, function (response) {}); ////////////////////////////////////////\n\n          break;\n        }\n      } catch (error) {\n        console.error(error);\n        continue;\n      }\n\n      if (i == self.table.length - 1) {\n        self.updateSpreadsheet();\n        self.complexInfos.length = 0;\n\n        for (var j = 1; j <= self.table.length; j++) {\n          var fields = $(rows[j]).children(\"td\");\n          var strataPlanID = fields[self.cols.StrataPlan].textContent.trim() + \" \" + fields[self.cols.StreetAddress].textContent.trim();\n          strataPlanID = strataPlanID.trim().split(\" \").join(\"-\");\n          complexInfo = {\n            ComplexName: fields[self.cols.ComplexName].textContent,\n            Address: fields[self.cols.StreetAddress].textContent,\n            City: fields[self.cols.City].textContent,\n            Postcode: fields[self.cols.Postcode].textContent,\n            DwellingType: fields[self.cols.HouseType].textContent,\n            StrataPlan: fields[self.cols.StrataPlan].textContent,\n            StrataPlanID: strataPlanID,\n            Neighborhood: fields[self.cols.Neighborhood].textContent,\n            CityDistrict: fields[self.cols.SubArea].textContent,\n            YearBuilt: fields[self.cols.YearBuilt].textContent,\n            PropertyType: fields[self.cols.PropertyType].textContent,\n            TitleToLand: fields[self.cols.TitleToLand].textContent,\n            Units: fields[self.cols.Units].textContent,\n            Storeys: fields[self.cols.Storeys].textContent,\n            BylawRentalRestriction: fields[self.cols.BylawRentalRestriction].textContent,\n            FloodPlain: fields[self.cols.FloodPlain].textContent,\n            Zoning: fields[self.cols.Zoning].textContent,\n            BylawRestriction: fields[self.cols.BylawRestriction].textContent,\n            Parking: fields[self.cols.Parking].textContent,\n            ManagementCoName: fields[self.cols.ManagementCoName].textContent,\n            ManagementCoPhone: fields[self.cols.ManagementCoPhone].textContent,\n            BylawPetRestriction: fields[self.cols.BylawPetRestriction].textContent,\n            BylawAgeRestriction: fields[self.cols.BylawAgeRestriction].textContent,\n            NeighborhoodCode: fields[self.cols.NeighborhoodCode].textContent,\n            Region: fields[self.cols.Region].textContent,\n            Province: fields[self.cols.Province].textContent,\n            RainScreen: fields[self.cols.RainScreen].textContent,\n            Construction: fields[self.cols.Construction].textContent,\n            Amenities: fields[self.cols.Amenities].textContent,\n            SiteInfluences: fields[self.cols.SiteInfluences].textContent,\n            StrataFeePSF: fields[self.cols.StrataFeePSF].textContent,\n            MaintenanceFeeInclude: fields[self.cols.MaintenanceFeeInclude].textContent,\n            AddedDate: $fx.formatDate_Y_m_d(new Date())\n          };\n          self.complexInfos.push(complexInfo);\n        } // console.log(\"complexSearch done::\", self.complexInfos);\n        // self.postComplexInfo();\n\n\n        var complex = new _assets_scripts_modules_Complex__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n        complex.postComplexInfos(this.complexInfos, $fx); // send strata property assess infos to mySql Table\n        // self.postAssessInfo();\n\n        var _assess = new _assets_scripts_modules_Assessment__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n\n        _assess.postAssessInfos(self.assessInfos, $fx);\n      }\n    }\n  },\n  updateComplex: function updateComplex() {\n    var self = this;\n    chrome.storage.local.get([\"_id\", \"name\"], function (result) {\n      var complexID = result._id;\n      var complexName = result.name;\n      complexName = $fx.normalizeComplexName(complexName);\n      var i = 0;\n\n      for (i = 0; i < self.table.length; i++) {\n        if (complexID == self.table[i][16]) {\n          console.log(\"====>Spreadsheet-Complex Updated: \", i);\n          self.table[i][12] = complexName;\n          self.table[i][15] = true; ////SETUP THE ROW'S COMPLEX SEARCH SIGN\n        }\n      }\n    });\n  },\n  updateSpreadsheet: function updateSpreadsheet() {\n    var self = this;\n    var x = $(\"table#grid tbody\");\n    var rows = x.children(\"tr\");\n    var rowNumber = self.rowNumber;\n    var assessSold = [];\n    var assessChangeSold = [];\n    var assessActive = [];\n    var assessChangeActive = [];\n    var countActiveListing = 0;\n    var countSoldListing = 0;\n    var aInfo = null;\n    var addressLink = $('<a id=\"addressLink\" target=\"_blank\" href=\"https://www.google.com/search?q=Google+tutorial+create+link\">' + \"Google tutorial create link\" + \"</a> \");\n    var addressText = \"\";\n    var i;\n\n    for (i = 0; i < rowNumber.length; i++) {\n      var j = rowNumber[i];\n      var t = $fx.convertStringToDecimal(self.table[j - 1][7]);\n      var status = self.table[j - 1][20];\n\n      if (t > 0) {\n        $($(rows[j]).children(\"td\")[self.cols.LandValue]).text($fx.removeDecimalFraction(self.table[j - 1][5]));\n        $($(rows[j]).children(\"td\")[self.cols.ImprovementValue]).text($fx.removeDecimalFraction(self.table[j - 1][6]));\n        $($(rows[j]).children(\"td\")[self.cols.TotalValue]).text($fx.removeDecimalFraction(self.table[j - 1][7]));\n        $($(rows[j]).children(\"td\")[self.cols.ChangeValuePercent]).text(self.table[j - 1][8] + \"%\");\n\n        switch (status) {\n          case \"A\":\n            assessActive.push($fx.convertStringToDecimal(self.table[j - 1][7]));\n            assessChangeActive.push($fx.convertStringToDecimal(self.table[j - 1][8]));\n            countActiveListing++;\n            break;\n\n          case \"S\":\n            assessSold.push($fx.convertStringToDecimal(self.table[j - 1][7]));\n            assessChangeSold.push($fx.convertStringToDecimal(self.table[j - 1][8]));\n            countSoldListing++;\n            break;\n        }\n      } else {\n        ////IF TOTAL.VALUE == 0, THEN DO NOT SHOW ANY NUMBER\n        $($(rows[j]).children(\"td\")[self.cols.LandValue]).text(\"\");\n        $($(rows[j]).children(\"td\")[self.cols.ImprovementValue]).text(\"\");\n        $($(rows[j]).children(\"td\")[self.cols.TotalValue]).text(\"\");\n        $($(rows[j]).children(\"td\")[self.cols.ChangeValuePercent]).text(\"\");\n\n        switch (status) {\n          case \"A\":\n            // assessActive.push(null);\n            // assessChangeActive.push(null);\n            countActiveListing++;\n            break;\n\n          case \"S\":\n            // assessSold.push(null);\n            // assessChangeSold.push(null);\n            countSoldListing++;\n            break;\n        }\n      }\n\n      $($(rows[j]).children(\"td\")[self.cols.StrataPlan]).text(self.table[j - 1][9]); //Show Plan Num in the table\n\n      $($(rows[j]).children(\"td\")[self.cols.Address]).text(\"\");\n      addressText = self.table[j - 1][13];\n      aInfo = new _assets_scripts_modules_AddressInfoExport_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](addressText, $($(rows[j]).children(\"td\")[self.cols.HouseType]).text(), true);\n      var addressLink = $('<a id=\"addressLink\" target=\"_blank\" href=\"https://www.google.com/search?q=Google+tutorial+create+link\">' + \"Google tutorial create link\" + \"</a> \");\n      addressLink.attr(\"href\", aInfo.googleSearchLink);\n      addressLink.text(aInfo.formalAddress);\n      addressLink.appendTo($($(rows[j]).children(\"td\")[self.cols.Address])); ////ADD A GOOGLE ADDRESS SEARCH ANCHOR\n\n      $($(rows[j]).children(\"td\")[self.cols.StreetAddress]).text(self.table[j - 1][17]); ////SHOW THE STREET ADDRESS WITHOUT UNIT#\n\n      $($(rows[j]).children(\"td\")[self.cols.UnitNo]).text(\"#\" + self.table[j - 1][18]); ////SHOW THE UNIT NO SEPARATELY\n\n      if (self.table[j - 1][12].trim()) {\n        $($(rows[j]).children(\"td\")[self.cols.ComplexName]).text(self.table[j - 1][12]); ////SHOW NORMALIZED COMPLEX NAME\n      }\n\n      $($(rows[j]).children(\"td\")[self.cols.StrataFeePSF]).text(self.table[j - 1][21]);\n    }\n\n    var maxChange = Math.max.apply(Math, assessChangeActive);\n    var minChange = Math.min.apply(Math, assessChangeActive);\n\n    for (var i = 0; i < self.table.length; i++) {\n      if (self.table[i][8] == maxChange) {\n        $(rows[i + 1]).css(\"color\", \"red\");\n      }\n\n      if (self.table[i][8] == minChange) {\n        $(rows[i + 1]).css(\"color\", \"blue\");\n      }\n    }\n\n    maxChange = Math.max.apply(Math, assessChangeSold);\n    minChange = Math.min.apply(Math, assessChangeSold);\n\n    for (var i = 0; i < self.table.length; i++) {\n      if (self.table[i][8] == maxChange) {\n        $(rows[i + 1]).css(\"color\", \"red\");\n      }\n\n      if (self.table[i][8] == minChange) {\n        $(rows[i + 1]).css(\"color\", \"blue\");\n      }\n    }\n\n    self.uiTable.setSumValues(\n    /*id for panel 1*/\n    1, assessChangeActive, countActiveListing, \"%\");\n    self.uiTable.setSumValues(\n    /*id for panel 2*/\n    2, assessChangeSold, countSoldListing, \"%\");\n    self.uiTable.render(2);\n    self.uiTable.setSumValues(\n    /*id for panel 1*/\n    1, assessActive, countActiveListing, \"$\");\n    self.uiTable.setSumValues(\n    /*id for panel 2*/\n    2, assessSold, countSoldListing, \"$\");\n    self.uiTable.render(3); //table data to background\n\n    var btnSendTable = self.uiTable.$UITable[0].querySelector(\"#mls-send-table-to-background\");\n    btnSendTable.click();\n  },\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  addLock: function addLock(tabID) {\n    chrome.runtime.sendMessage(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()({\n      from: \"SpreadSheet\",\n      todo: \"addLock\",\n      tabID: tabID\n    }, \"tabID\", tabID), function (response) {\n      console.log(\"SpreadSheet got tax response:\", response);\n    });\n  }\n}; //entry point:\n\n$(\n/*#__PURE__*/\n_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()(\n/*#__PURE__*/\n_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee() {\n  var $loadingNotice, DEBUG, methods, i;\n  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"Spreadsheet Document State:\", document.readyState);\n          $loadingNotice = document.querySelector(\"#load_grid\"); // Define Debug Status::\n\n          DEBUG = true;\n\n          if (!DEBUG) {\n            if (!window.console) window.console = {};\n            methods = [\"log\", \"debug\", \"warn\", \"info\"];\n\n            for (i = 0; i < methods.length; i++) {\n              console[methods[i]] = function () {};\n            }\n          }\n\n          console.log($loadingNotice); // const src1 = chrome.runtime.getURL(\"d:/wamp64/www/ChromeX/MLSHelper/App/content/modules/test.js\");\n          // const src1 = \"test.js\";\n          // const contentTest = await import(src1);\n          // test();\n\n          computeSFPrices.init();\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this);\n}))); //////////////////////////////////////////////////////////////////////////////\n//////////////                  Recycle Code            //////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\n//# sourceURL=webpack:///./app/content/SpreadSheetCompletion.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/***/ (function(module, exports) {

eval("function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayLikeToArray = __webpack_require__(\"./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/***/ (function(module, exports) {

eval("function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/createClass.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/***/ (function(module, exports) {

eval("function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inherits.js":
/***/ (function(module, exports, __webpack_require__) {

eval("var setPrototypeOf = __webpack_require__(\"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/inherits.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArray.js":
/***/ (function(module, exports) {

eval("function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/***/ (function(module, exports) {

eval("function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/***/ (function(module, exports, __webpack_require__) {

eval("var _typeof = __webpack_require__(\"./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\n\nvar assertThisInitialized = __webpack_require__(\"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/***/ (function(module, exports) {

eval("function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/toConsumableArray.js":
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithoutHoles = __webpack_require__(\"./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js\");\n\nvar iterableToArray = __webpack_require__(\"./node_modules/@babel/runtime/helpers/iterableToArray.js\");\n\nvar unsupportedIterableToArray = __webpack_require__(\"./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = __webpack_require__(\"./node_modules/@babel/runtime/helpers/nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/***/ (function(module, exports) {

eval("function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/typeof.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayLikeToArray = __webpack_require__(\"./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(\"./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js\");\n\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/regenerator/index.js?");

/***/ })

/******/ });